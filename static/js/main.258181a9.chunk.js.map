{"version":3,"sources":["components/Logo.js","components/Button.js","contexts/ModalContext.js","UI/Header.js","pages/WelcomeContent.js","contexts/RecipesContext.js","contexts/SelectedIdContext.js","components/Recipes/RecipeList.js","components/Recipes/RecipeDetail.js","UI/Footer.js","pages/ReadContent.js","components/Card.js","components/Recipes/IngrediList.js","components/FormModal.js","pages/UpdateContent.js","pages/CreateContent.js","App.js","index.js","components/Recipes/RecipeList.module.css","UI/Footer.module.css","components/FormModal.module.css","components/Button.module.css","pages/WelcomeContent.module.css","components/Logo.module.css","components/Recipes/RecipeDetail.module.css","UI/Header.module.css","components/Card.module.css"],"names":["Logo","className","classes","logo","icon","Button","props","type","onClick","button","fill","children","ModalContext","createContext","ModalContextProvider","useState","showModal","setShowModal","Provider","value","closeModal","createModalOpen","updateModalOpen","Header","setMode","useContext","smallButton","setSmallButton","showButton","window","innerWidth","useEffect","addEventListener","WelcomeContent","console","log","container","h2","RecipesContext","recipeReducer","state","action","id","recipe","title","cookingTime","servings","ingredients","foundIndex","find","index","splice","map","updatedRecipe","RecipesContextProvider","useReducer","localData","localStorage","getItem","JSON","parse","recipeList","dispatchRecipeList","activeRecipe","setActiveRecipe","settingMode","length","setItem","stringify","recipeLength","readRecipe","filter","SelectedIdContext","SelectedIdContextProvider","selectedRecipeId","setSelectedRecipeId","setSelectedId","RecipeList","clickHandler","event","target","dataset","ul","p","li","active","RecipeDetail","time","hours","Math","floor","min","calcCookingTime","ingredient","Footer","footer","confirm","alert","ReadContent","Card","card","IngrediList","remove","onDelete","validationSchema","Yup","shape","trim","strict","required","positive","integer","of","FormModal","mode","closeHandler","formik","useFormik","initialValues","onSubmit","values","ReactDOM","createPortal","backdrop","document","getElementById","onKeyDown","preventDefault","newId","createId","newRecipe","addRecipeHandler","updateHandler","errors","touched","modal","Row","Col","xs","sm","md","form","name","htmlFor","error","placeholder","step","fieldArrayProps","unshift","setFieldValue","key","UpdateContent","CreateContent","App","render","module","exports"],"mappings":"0LAYeA,MATf,WACE,OACE,sBAAKC,UAAWC,IAAQC,KAAxB,UACE,mBAAGF,UAAS,UAAKC,IAAQE,KAAb,sBADd,e,iBCWWC,MAbf,SAAgBC,GAAQ,IAAD,EACrB,OACE,yBACEC,KAAMD,EAAMC,MAAQ,GACpBC,QAASF,EAAME,QACfP,UAAS,UAAKC,IAAQO,OAAb,YAAuBP,IAAQQ,KAA/B,sBAAuCJ,EAAML,iBAA7C,QAA0D,IAHrE,UAKGK,EAAMF,MAAQ,mBAAGH,UAAS,UAAKK,EAAMF,KAAX,YAAmBF,IAAQE,QACrDE,EAAMK,a,iBCTAC,EAAeC,0BAmCbC,EAjCc,SAACR,GAC5B,MAAkCS,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OACE,cAACL,EAAaM,SAAd,CACEC,MAAO,CACLH,YACAC,eACAG,WAnBa,WACjBH,GAAa,IAmBTI,gBAfkB,WACtBJ,GAAa,IAeTK,gBAXkB,WACtBL,GAAa,KAIb,SASGX,EAAMK,YCUEY,MApCf,YAA8B,IAAZC,EAAW,EAAXA,QACRH,EAAoBI,qBAAWb,GAA/BS,gBACR,EAAsCN,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KAGMC,EAAa,WACbC,OAAOC,YAAc,IAAKH,GAAe,GACxCA,GAAe,IAetB,OAZAI,qBAAU,WACRH,MACC,IAEHC,OAAOG,iBAAiB,SAAUJ,GAShC,yBAAQ3B,UAAU,mCAAlB,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAS,mBAAcC,IAAQ,YAApC,SACE,cAAC,EAAD,CAAQE,KAAK,qBAAqBI,QAXnB,WACnBgB,EAAQ,UACRH,KASI,SACGK,GAAe,qB,iBCpBXO,MAZf,WAGE,OAFAC,QAAQC,IAAI,yBAGV,qBAAKlC,UAAWC,IAAQkC,UAAxB,SACE,qBAAKnC,UAAWC,IAAQ,UAAxB,SACE,oBAAID,UAAWC,IAAQmC,GAAvB,sC,wBCPKC,EAAiBzB,0BAC9B,SAAS0B,EAAcC,EAAOC,GAC5B,OAAQA,EAAOlC,MACb,IAAK,aACH,MAAM,CACJ,CACEmC,GAAID,EAAOE,OAAOD,GAClBE,MAAOH,EAAOE,OAAOC,MACrBC,YAAaJ,EAAOE,OAAOE,YAC3BC,SAAUL,EAAOE,OAAOG,SACxBC,YAAaN,EAAOE,OAAOI,cAN/B,mBAQKP,IAGP,IAAK,gBACH,IAAIQ,EAQJ,OAPAR,EAAMS,MAAK,SAACN,EAAQO,GACdP,EAAOD,KAAOD,EAAOC,KACvBM,EAAaE,MAIjBV,EAAMW,OAAOH,EAAY,GAClBR,EAET,IAAK,gBACH,OAAOA,EAAMY,KAAI,SAACT,GAAD,OACfA,EAAOD,KAAOD,EAAOC,GACjB,CACEA,GAAIC,EAAOD,GACXE,MAAOH,EAAOY,cAAcT,MAC5BC,YAAaJ,EAAOY,cAAcR,YAClCC,SAAUL,EAAOY,cAAcP,SAC/BC,YAAaN,EAAOY,cAAcN,aAEpCJ,KAGR,QACE,OAAOH,GAIb,IAgFec,EAhFgB,SAAC,GAA2B,IAAzB9B,EAAwB,EAAxBA,QAASb,EAAe,EAAfA,SACzC,EAAyC4C,qBAAWhB,EAAe,IAAI,WACrE,IAAMiB,EAAYC,aAAaC,QAAQ,WACvC,OAAOF,EACHG,KAAKC,MAAMJ,GACX,CACE,CACEd,GAAI,gBACJE,MAAO,gCACPC,YAAa,GACbC,SAAU,EACVC,YAAa,CACX,yCACA,cACA,iCACA,kBACA,8BACA,mCACA,4BACA,kBACA,qBACA,4BAGJ,CACEL,GAAI,gBACJE,MAAO,cACPC,YAAa,GACbC,SAAU,EACVC,YAAa,CACX,uBACA,uBACA,iCACA,qDACA,8BACA,wCACA,4BACA,aACA,4BACA,qCAtCZ,mBAAOc,EAAP,KAAmBC,EAAnB,KA4CA,EAAwC/C,qBAAxC,mBAAOgD,EAAP,KAAqBC,EAArB,KAEAjC,qBAAU,WACRkC,EAAYJ,EAAWK,QACvBT,aAAaU,QAAQ,UAAWR,KAAKS,UAAUP,MAC9C,CAACA,EAAWK,OAAQL,IAGvB,IAOMI,EAAc,SAACI,GACA7C,EAAnB6C,EAAe,EAAY,OAAkB,YAG/C,OACE,cAAC/B,EAAepB,SAAhB,CACEC,MAAO,CACL0C,aACAE,eACAO,WAhBa,SAAC5B,GAClBmB,EAAWU,QAAO,SAAC5B,GAEjB,OADIA,EAAOD,KAAOA,GAAIsB,EAAgBrB,GAC/BA,MAcLqB,kBACAF,qBACAG,eAPJ,SAUGtD,KCvHM6D,EAAoB3D,0BAgBlB4D,MAdf,SAAmCnE,GACjC,MAAgDS,mBAAS,GAAzD,mBAAO2D,EAAP,KAAyBC,EAAzB,KAMA,OACE,cAACH,EAAkBtD,SAAnB,CAA4BC,MAAO,CAAEuD,mBAAkBE,cALnC,SAAClC,GACrBiC,EAAoBjC,KAIpB,SACGpC,EAAMK,YC0BEkE,MAlCf,WACE3C,QAAQC,IAAI,qBAEZ,MAAiDV,qBAAWa,GAApDuB,EAAR,EAAQA,WAAYS,EAApB,EAAoBA,WAAYP,EAAhC,EAAgCA,aACxBa,EAAkBnD,qBAAW+C,GAA7BI,cAGFE,EAAe,SAACC,GACpBH,EAAcG,EAAMC,OAAOC,QAAQvC,IACnC4B,EAAWS,EAAMC,OAAOC,QAAQvC,KAGlC,OACE,qBAAIzC,UAAWC,IAAQgF,GAAvB,UACE,oBAAGjF,UAAWC,IAAQiF,EAAtB,UACE,mBAAGlF,UAAU,kCADf,2CAIC4D,EAAWT,KAAI,SAACT,GAAD,OACd,oBAEE,UAASA,EAAOD,GAChBlC,QAASsE,EACT7E,UAAS,UAAKC,IAAQkF,GAAb,4BACPrB,GAAgBA,EAAarB,KAAOC,EAAOD,GAAKxC,IAAQmF,OAAS,IALrE,SAQG1C,EAAOC,OAPHD,EAAOD,W,iBCuBP4C,MA5Cf,WACEpD,QAAQC,IAAI,wBACZ,IAAsBQ,EAAWlB,qBAAWa,GAApCyB,aAWR,OACE,mCACGpB,EACC,qBAAoB1C,UAAS,cAASC,IAAQgF,IAA9C,UACE,6BACE,6BAAKvC,EAAOC,UAEd,qBAAI3C,UAAW,oBAAf,UACE,mBAAGA,UAAU,sBAhBC,SAACsF,GACvB,GAAIA,GAAQ,GAAI,CACd,IAAIC,EAAQC,KAAKC,MAAMH,EAAO,IAC1BI,EAAMJ,EAAO,GACjB,OAAOI,EAAM,EAAIH,EAAQ,MAAQG,EAAM,OAASH,EAAQ,MACnD,OAAOD,EAAO,OAYZK,EAAiBjD,EAAOE,gBAE3B,qBAAI5C,UAAW,oBAAf,UACE,mBAAGA,UAAU,6BACZ0C,EAAOG,SAFV,eAIA,8CACA,oBAAI7C,UAAWC,IAAQ6C,YAAvB,SACGJ,EAAOI,YAAYK,KAAI,SAACyC,EAAY3C,GAAb,OACtB,oBAAgB,aAAYA,EAA5B,SACG2C,GADM3C,UAfNP,EAAOD,IAsBhB,M,iBCnCO,SAASoD,EAAT,GAA8B,IAAZtE,EAAW,EAAXA,QAC/BU,QAAQC,IAAI,iBACZ,MAA4CV,qBAAW+C,GAA/CE,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,cAClBtD,EAAoBG,qBAAWb,GAA/BU,gBACR,EAAgDG,qBAAWa,GAAnD0B,EAAR,EAAQA,gBAAiBF,EAAzB,EAAyBA,mBAwBzB,OACE,mCACE,yBAAQ7D,UAAS,cAASC,IAAQ6F,QAAlC,UACE,qBAAK9F,UAAU,gCACf,qBACEA,UAAS,sCAAiCC,IAAQ,qBADpD,SAGwB,IAArBwE,GACC,qCACE,cAAC,EAAD,CAAQzE,UAAWC,IAAQO,OAAQD,QAdpB,WACzBc,IACAE,EAAQ,WAYE,oBAGA,cAAC,EAAD,CAAQvB,UAAWC,IAAQO,OAAQD,QAlCpB,WAEvBqB,OAAOmE,QACL,uHAGFlC,EAAmB,CACjBvD,KAAM,gBACNmC,GAAIkC,IAENA,EAAc,GACdZ,IACAiC,MAAM,+CAsBE,8BC3Cd,IAkBeC,EAlBK,SAAC,GAAiB,IAAf1E,EAAc,EAAdA,QAGrB,OAFAU,QAAQC,IAAI,sBAGV,qCACE,uBAAMlC,UAAU,MAAhB,UACE,qBAAKA,UAAU,qCAAf,SACE,cAAC,EAAD,MAEF,yBAASA,UAAU,qCAAnB,SACE,cAAC,EAAD,SAGJ,cAAC6F,EAAD,CAAQtE,QAASA,Q,0ECRR2E,MANf,SAAc7F,GACZ,OACE,qBAAKL,UAAS,UAAKC,IAAQkG,KAAb,YAAqB9F,EAAML,WAAzC,SAAuDK,EAAMK,YCsBlD0F,MAzBf,YAAgE,IAAzCjG,EAAwC,EAAxCA,KAAMkG,EAAkC,EAAlCA,OAAQrG,EAA0B,EAA1BA,UAAW8C,EAAe,EAAfA,YAExCwD,EAAW,SAACxB,GAChBuB,EAAOvB,EAAMC,OAAOC,QAAQ/B,QAG9B,OACE,mCACGH,EAAYmB,OAAS,EAClBnB,EAAYK,KAAI,SAACyC,EAAY3C,GAAb,OACd,qBAEE,aAAYA,EACZjD,UAAS,iBAAKA,QAAL,IAAKA,IAAa,IAC3BO,QAAS+F,EAJX,UAMGV,EACAzF,GAAQ,mBAAG,aAAY8C,EAAOjD,UAAWG,MANrC8C,MAST,M,SCPNsD,EAAmBC,MAAaC,MAAM,CACxC9D,MAAO6D,MAAaE,OAAOC,QAAO,GAAMC,SAAS,YAAYlB,IAAI,GACjE9C,YAAa4D,MACVI,SAAS,YACTC,SAAS,wBACTC,UACHjE,SAAU2D,MACPI,SAAS,YACTC,SAAS,oBACTC,UACHhE,YAAa0D,MACVO,GAAGP,OACHI,SAAS,yBACTlB,IAAI,EAAG,8BAoPGsB,MAjPf,YAAuC,IAAlBC,EAAiB,EAAjBA,KAAM1F,EAAW,EAAXA,QACzB,EAMIC,qBAAWa,GALbyB,EADF,EACEA,aACAC,EAFF,EAEEA,gBACAF,EAHF,EAGEA,mBACAG,EAJF,EAIEA,YACAJ,EALF,EAKEA,WAEF,EAA4CpC,qBAAW+C,GAA/CI,EAAR,EAAQA,cAAeF,EAAvB,EAAuBA,iBACvB,EAAqCjD,qBAAWb,GAAxCK,EAAR,EAAQA,aAAcG,EAAtB,EAAsBA,WAiBhB+F,EAAe,WAEnBlD,EAAYJ,EAAWK,QACvB9C,KAgBE,EAAJ,OAAwD2C,QAAxD,IAAwDA,IAAgB,GAAlErB,EAAN,EAAMA,GAAIE,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,YAAaC,EAA9B,EAA8BA,SAAUC,EAAxC,EAAwCA,YAElCqE,EAASC,YAAU,CACvBC,cACW,WAATJ,EACI,CACEtE,MAAO,GACPC,YAAa,GACbC,SAAU,GACV+C,WAAY,GACZ9C,YAAa,IAEN,WAATmE,EACA,CACEtE,MAAOA,EACPC,YAAaA,EACbC,SAAUA,EACVC,YAAaA,GAEf,GACNwE,SAAU,SAACC,GACTtF,QAAQC,IAAIwB,KAAKS,UAAUoD,EAAQ,KAAM,OAI7C,OACE,qCACGC,IAASC,aACR,qBAAKzH,UAAWC,IAAQyH,WACxBC,SAASC,eAAe,kBAEzBJ,IAASC,aACR,cAAC,IAAD,CACEJ,cAAeF,EAAOE,cACtBd,iBAAkBA,EAClBsB,UAAW,SAAC/C,GAAD,OAAWA,EAAMgD,kBAC5BR,SAAU,SAACC,GAAD,MACC,WAATN,EAtEe,SAACvE,GACxB,IAAMqF,EAAQC,cACRC,EAAS,2BAAQvF,GAAR,IAAgBD,GAAIsF,IACnClE,EAAmB,CACjBvD,KAAM,aACNoC,OAAQuF,IAEVtD,EAAcoD,GACdhE,EAAgBkE,GAChB1G,EAAQ,QACRJ,IA6DY+G,CAAiBX,GAlDT,SAACA,EAAQ9E,GAC7BoB,EAAmB,CACjBvD,KAAM,gBACN8C,cAAemE,EACf9E,OAEFsB,EAAgBwD,EAASA,EAAO9E,GAAKA,GACrClB,EAAQ,QACRP,GAAa,GA2CDmH,CAAcZ,EAAQ9C,IAP9B,SAUG,gBAAG2D,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,eAAC,EAAD,CAAMrI,UAAWC,IAAQqI,MAAzB,UACE,eAACC,EAAA,EAAD,CAAKvI,UAAS,6BAAwBC,IAAQ,cAA9C,UACE,cAACuI,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAG1I,UAAU,6BAA9B,SACE,cAAC,EAAD,CACEG,KAAK,eACLH,UAAWC,IAAQ,eACnBM,QAAS2G,MAGb,cAACsB,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,wBAAQ1I,UAAWC,IAAQ,gBAA3B,SACE,oBAAID,UAAU,UAAd,SACY,WAATiH,EACG,mBACA,2BAKZ,cAAC,IAAD,UACE,eAACsB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,EAAG3I,UAAWC,IAAQ2I,KAAvC,UACE,eAACL,EAAA,EAAD,WACY,WAATtB,GACC,uBAAO3G,KAAK,SAASuI,KAAK,KAAK3H,MAAOuB,IAExC,eAAC+F,EAAA,EAAD,CAAKxI,UAAU,OAAf,UACE,uBAAO8I,QAAQ,QAAQ9I,UAAU,qBAAjC,0BAGA,cAAC,IAAD,CACEM,KAAK,OACLmC,GAAG,QACHoG,KAAK,QACL7I,UAAS,uBAAkBC,IAAQ2I,QAEpCR,EAAOzF,OAAS0F,EAAQ1F,MACvB,qBAAK3C,UAAWC,IAAQ8I,MAAxB,SAAgCX,EAAOzF,QACrC,WAGR,eAAC4F,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAG1I,UAAU,OAA9B,UACE,uBACE8I,QAAQ,cACR9I,UAAU,qBAFZ,uBAMA,cAAC,IAAD,CACEM,KAAK,SACLmC,GAAG,cACHoG,KAAK,cACLG,YAAY,MACZhJ,UAAS,uBAAkBC,IAAQ2I,MACnClD,IAAI,IACJuD,KAAK,MAENb,EAAOxF,aAAeyF,EAAQzF,YAC7B,qBAAK5C,UAAWC,IAAQ8I,MAAxB,SACGX,EAAOxF,cAER,QAEN,eAAC4F,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAG1I,UAAU,OAA9B,UACE,uBACE8I,QAAQ,WACR9I,UAAU,qBAFZ,sBAMA,cAAC,IAAD,CACEM,KAAK,SACLmC,GAAG,WACHoG,KAAK,WACLG,YAAY,WACZhJ,UAAS,uBAAkBC,IAAQ2I,MACnClD,IAAI,IACJuD,KAAK,MAENb,EAAOvF,UAAYwF,EAAQxF,SAC1B,qBAAK7C,UAAWC,IAAQ8I,MAAxB,SAAgCX,EAAOvF,WACrC,cAIV,cAAC2F,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,EAAG3I,UAAWC,IAAQ2I,KAAvC,SACE,cAACL,EAAA,EAAD,UACE,sBAAKvI,UAAU,0BAAf,UACE,uBACE8I,QAAQ,cACR9I,UAAU,qBAFZ,yBAMA,cAAC,IAAD,CAAY6I,KAAK,cAAjB,SACG,SAACK,GACA,IAAQC,EAA0BD,EAA1BC,QAAS9C,EAAiB6C,EAAjB7C,OAAQuC,EAASM,EAATN,KACjBrB,EAA0BqB,EAA1BrB,OAAQ6B,EAAkBR,EAAlBQ,cACRtG,EAAgByE,EAAhBzE,YACR,OACE,gCACE,cAAC,IAAD,CACExC,KAAK,OACLmC,GAAG,aACHoG,KAAK,aACL7I,UAAS,uBAAkBC,IAAQ2I,MACnCI,YAAY,wBACZnB,UAAW,SAAC/C,GAEM,UAAdA,EAAMuE,KAC+B,IAArCvE,EAAMC,OAAO7D,MAAMwF,OAAOzC,SAE1Ba,EAAMgD,iBACNqB,EAAQrE,EAAMC,OAAO7D,OACrBkI,EAAc,aAAc,QAIjChB,EAAOtF,aAAeuF,EAAQvF,YAC7B,qBAAK9C,UAAWC,IAAQ8I,MAAxB,SACGX,EAAOtF,cAER,KACJ,oBAAI9C,UAAS,eAAUC,IAAQgF,IAA/B,SACE,cAAC,EAAD,CACE9E,KAAM,eACNkG,OAAQA,EACRvD,YAAaA,EACb9C,UAAWC,IAAQkF,oBAUrC,cAACqD,EAAA,EAAD,CAAKxI,UAAU,OAAf,SACE,cAAC,EAAD,CAAQM,KAAK,SAAb,+BAOZqH,SAASC,eAAe,mBC9PjB0B,MARf,YAA2C,IAAlBrC,EAAiB,EAAjBA,KAAM1F,EAAW,EAAXA,QAC7BU,QAAQC,IAAI,wBAEZ,IAAQnB,EAAcS,qBAAWb,GAAzBI,UAER,OAAO,mCAAGA,GAAa,cAAC,EAAD,CAAWkG,KAAMA,EAAM1F,QAASA,OCE1CgI,EAPO,SAAC,GAAuB,IAArBtC,EAAoB,EAApBA,KAAM1F,EAAc,EAAdA,QAC7BU,QAAQC,IAAI,wBACZ,IAAQnB,EAAcS,qBAAWb,GAAzBI,UAER,OAAO,mCAAGA,GAAa,cAAC,EAAD,CAAWkG,KAAMA,EAAM1F,QAASA,OCIzDU,QAAQC,IAAI,oBAgCGsH,OA9Bf,WACEvH,QAAQC,IAAI,cACZ,MAAwBpB,mBAAS,QAAjC,mBAAOmG,EAAP,KAAa1F,EAAb,KAGA,OACE,qBAAKvB,UAAU,gBAAf,SACE,cAAC,EAAD,CAAwBuB,QAASA,EAAjC,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQA,QAASA,IAEjB,cAAC,EAAD,UACY,YAAT0F,EACC,cAAC,EAAD,IACW,SAATA,EACF,cAAC,EAAD,CAAaA,KAAMA,EAAM1F,QAASA,IACvB,WAAT0F,EACF,cAAC,EAAD,CAAeA,KAAMA,EAAM1F,QAASA,IACzB,WAAT0F,EACF,cAAC,EAAD,CAAeA,KAAMA,EAAM1F,QAASA,IAEpC,aC9BdiG,IAASiC,OAAO,cAAC,GAAD,IAAS9B,SAASC,eAAe,U,mBCJjD8B,EAAOC,QAAU,CAAC,GAAK,uBAAuB,GAAK,uBAAuB,OAAS,2BAA2B,KAAO,yBAAyB,EAAI,wB,mBCAlJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,mBAAmB,iCAAiC,OAAS,yB,kBCA/GD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,SAAW,4BAA4B,MAAQ,yBAAyB,YAAY,6BAA6B,eAAe,gCAAgC,cAAc,+BAA+B,GAAK,sBAAsB,MAAQ,yBAAyB,GAAK,wB,mBCA/TD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,uB,mBCArFD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,GAAK,6B,mBCArED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,qB,mBCAnDD,EAAOC,QAAU,CAAC,GAAK,yBAAyB,YAAc,oC,mBCA9DD,EAAOC,QAAU,CAAC,UAAU,wBAAwB,aAAa,6B,mBCAjED,EAAOC,QAAU,CAAC,KAAO,qB","file":"static/js/main.258181a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Logo.module.css';\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className={classes.logo}>\r\n      <i className={`${classes.icon} fas fa-utensils`} />\r\n      COOKBOOK\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      type={props.type || ''}\r\n      onClick={props.onClick}\r\n      className={`${classes.button} ${classes.fill} ${props.className ?? ''}`}\r\n    >\r\n      {props.icon && <i className={`${props.icon} ${classes.icon}`}></i>}\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalContextProvider = (props) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Close modal handler\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // (Add a new recipe) modal open handler\r\n  const createModalOpen = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  // (update a recipe) modal open handler\r\n  const updateModalOpen = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        showModal,\r\n        setShowModal,\r\n        closeModal,\r\n        createModalOpen,\r\n        updateModalOpen,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalContextProvider;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Logo from '../components/Logo';\r\nimport Button from '../components/Button';\r\nimport classes from './Header.module.css';\r\nimport { ModalContext } from '../contexts/ModalContext';\r\n\r\nfunction Header({ setMode }) {\r\n  const { createModalOpen } = useContext(ModalContext);\r\n  const [smallButton, setSmallButton] = useState(true);\r\n\r\n  // When window size(width) is less than 576px show mobile version of button\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 576) setSmallButton(false);\r\n    else setSmallButton(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n\r\n  // When add a new recipe button is clicked\r\n  const clickHandler = () => {\r\n    setMode('create');\r\n    createModalOpen();\r\n  };\r\n\r\n  return (\r\n    <header className='row py-4 px-3 align-items-center'>\r\n      <div className='col-sm-4'>\r\n        <Logo />\r\n      </div>\r\n      <div className={`col-sm-8 ${classes['btn-box']}`}>\r\n        <Button icon='fas fa-plus-square' onClick={clickHandler}>\r\n          {smallButton && 'Add recipe'}\r\n        </Button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport classes from './WelcomeContent.module.css';\r\n\r\nfunction WelcomeContent() {\r\n  console.log('WelcomeContent render');\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes['h2-box']}>\r\n        <h2 className={classes.h2}>Welcome to COOKBOOK</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeContent;\r\n","import React, { useState, useReducer, createContext, useEffect } from 'react';\r\n\r\nexport const RecipesContext = createContext();\r\nfunction recipeReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD_RECIPE':\r\n      return [\r\n        {\r\n          id: action.recipe.id,\r\n          title: action.recipe.title,\r\n          cookingTime: action.recipe.cookingTime,\r\n          servings: action.recipe.servings,\r\n          ingredients: action.recipe.ingredients,\r\n        },\r\n        ...state,\r\n      ];\r\n\r\n    case 'REMOVE_RECIPE':\r\n      let foundIndex;\r\n      state.find((recipe, index) => {\r\n        if (recipe.id === action.id) {\r\n          foundIndex = index;\r\n        }\r\n      });\r\n\r\n      state.splice(foundIndex, 1);\r\n      return state;\r\n\r\n    case 'UPDATE_RECIPE':\r\n      return state.map((recipe) =>\r\n        recipe.id === action.id\r\n          ? {\r\n              id: recipe.id,\r\n              title: action.updatedRecipe.title,\r\n              cookingTime: action.updatedRecipe.cookingTime,\r\n              servings: action.updatedRecipe.servings,\r\n              ingredients: action.updatedRecipe.ingredients,\r\n            }\r\n          : recipe\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst RecipesContextProvider = ({ setMode, children }) => {\r\n  const [recipeList, dispatchRecipeList] = useReducer(recipeReducer, [], () => {\r\n    const localData = localStorage.getItem('recipes');\r\n    return localData\r\n      ? JSON.parse(localData)\r\n      : [\r\n          {\r\n            id: '59d0208e-0490',\r\n            title: 'Garlic and Green Olives Pasta',\r\n            cookingTime: 15,\r\n            servings: 4,\r\n            ingredients: [\r\n              '12oz. pappardelle or other wide noodle',\r\n              'Kosher salt',\r\n              '¼cup extra-virgin olive oil',\r\n              '8 garlic cloves',\r\n              '1cup finely chopped parsley',\r\n              '1cup pitted Castelvetrano olives',\r\n              'crushed red pepper flakes',\r\n              'unsalted butter',\r\n              '1 cup basil leaves',\r\n              '2tsp. fresh lemon juice',\r\n            ],\r\n          },\r\n          {\r\n            id: '59d0208e-0491',\r\n            title: 'Greek Salad',\r\n            cookingTime: 10,\r\n            servings: 3,\r\n            ingredients: [\r\n              '6 firm ripe tomatoes',\r\n              '3 Lebanese cucumbers',\r\n              '1 red onion, sliced into rings',\r\n              '1 red capsicum, halved, deseeded, coarsely chopped',\r\n              '200g marinated Greek olives',\r\n              '220g marinated feta, coarsely chopped',\r\n              '1 tsp dried Greek oregano',\r\n              '1 tsp salt',\r\n              '125ml (1/2 cup) olive oil',\r\n              '60ml (1/4 cup) white vinegar',\r\n            ],\r\n          },\r\n        ];\r\n  });\r\n\r\n  const [activeRecipe, setActiveRecipe] = useState();\r\n\r\n  useEffect(() => {\r\n    settingMode(recipeList.length);\r\n    localStorage.setItem('recipes', JSON.stringify(recipeList));\r\n  }, [recipeList.length, recipeList]);\r\n\r\n  // Render detail of selected recipe\r\n  const readRecipe = (id) => {\r\n    recipeList.filter((recipe) => {\r\n      if (recipe.id === id) setActiveRecipe(recipe);\r\n      return recipe;\r\n    });\r\n  };\r\n\r\n  const settingMode = (recipeLength) => {\r\n    recipeLength > 0 ? setMode('read') : setMode('welcome');\r\n  };\r\n\r\n  return (\r\n    <RecipesContext.Provider\r\n      value={{\r\n        recipeList,\r\n        activeRecipe,\r\n        readRecipe,\r\n        setActiveRecipe,\r\n        dispatchRecipeList,\r\n        settingMode,\r\n      }}\r\n    >\r\n      {children}\r\n    </RecipesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecipesContextProvider;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const SelectedIdContext = createContext();\r\n\r\nfunction SelectedIdContextProvider(props) {\r\n  const [selectedRecipeId, setSelectedRecipeId] = useState(0);\r\n\r\n  const setSelectedId = (id) => {\r\n    setSelectedRecipeId(id);\r\n  };\r\n\r\n  return (\r\n    <SelectedIdContext.Provider value={{ selectedRecipeId, setSelectedId }}>\r\n      {props.children}\r\n    </SelectedIdContext.Provider>\r\n  );\r\n}\r\n\r\nexport default SelectedIdContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport classes from './RecipeList.module.css';\r\nimport { RecipesContext } from '../../contexts/RecipesContext';\r\nimport { SelectedIdContext } from '../../contexts/SelectedIdContext';\r\n\r\nfunction RecipeList() {\r\n  console.log('RecipeList render');\r\n\r\n  const { recipeList, readRecipe, activeRecipe } = useContext(RecipesContext);\r\n  const { setSelectedId } = useContext(SelectedIdContext);\r\n\r\n  // When the list of recipes is clicked shows recipe details\r\n  const clickHandler = (event) => {\r\n    setSelectedId(event.target.dataset.id);\r\n    readRecipe(event.target.dataset.id);\r\n  };\r\n\r\n  return (\r\n    <ul className={classes.ul}>\r\n      <p className={classes.p}>\r\n        <i className='fas fa-arrow-circle-down me-2' />\r\n        Select a recipe to check the details.\r\n      </p>\r\n      {recipeList.map((recipe) => (\r\n        <li\r\n          key={recipe.id}\r\n          data-id={recipe.id}\r\n          onClick={clickHandler}\r\n          className={`${classes.li} text-capitalize ${\r\n            activeRecipe && activeRecipe.id === recipe.id ? classes.active : ''\r\n          }`}\r\n        >\r\n          {recipe.title}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default RecipeList;\r\n","import React, { useContext } from 'react';\r\nimport classes from './RecipeDetail.module.css';\r\nimport { RecipesContext } from '../../contexts/RecipesContext';\r\n\r\nfunction RecipeDetail() {\r\n  console.log('Recipe Detail render');\r\n  const { activeRecipe: recipe } = useContext(RecipesContext);\r\n\r\n  // Function to cooking time formatting\r\n  const calcCookingTime = (time) => {\r\n    if (time >= 60) {\r\n      let hours = Math.floor(time / 60);\r\n      var min = time % 60;\r\n      return min > 0 ? hours + 'hr ' + min + 'mins' : hours + 'hr ';\r\n    } else return time + 'mins';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {recipe ? (\r\n        <ul key={recipe.id} className={`row ${classes.ul}`}>\r\n          <li>\r\n            <h2>{recipe.title}</h2>\r\n          </li>\r\n          <li className={'col-md-5 col-sm-3'}>\r\n            <i className='far fa-clock me-2'></i>\r\n            {calcCookingTime(+recipe.cookingTime)}\r\n          </li>\r\n          <li className={'col-md-4 col-sm-3'}>\r\n            <i className='fas fa-user-friends me-2'></i>\r\n            {recipe.servings} servings\r\n          </li>\r\n          <li>Ingredients:</li>\r\n          <ul className={classes.ingredients}>\r\n            {recipe.ingredients.map((ingredient, index) => (\r\n              <li key={index} data-index={index}>\r\n                {ingredient}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </ul>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecipeDetail;\r\n","import React, { useContext } from 'react';\r\nimport Button from '../components/Button';\r\nimport classes from './Footer.module.css';\r\nimport { RecipesContext } from '../contexts/RecipesContext';\r\nimport { SelectedIdContext } from '../contexts/SelectedIdContext';\r\nimport { ModalContext } from '../contexts/ModalContext';\r\n\r\nexport default function Footer({ setMode }) {\r\n  console.log('footer render');\r\n  const { selectedRecipeId, setSelectedId } = useContext(SelectedIdContext);\r\n  const { updateModalOpen } = useContext(ModalContext);\r\n  const { setActiveRecipe, dispatchRecipeList } = useContext(RecipesContext);\r\n\r\n  const deleteClickHandler = () => {\r\n    if (\r\n      window.confirm(\r\n        'Are you sure want to delete the recipe? If you delete the recipe, you will permanently lose your selected recipe.'\r\n      )\r\n    ) {\r\n      dispatchRecipeList({\r\n        type: 'REMOVE_RECIPE',\r\n        id: setSelectedId,\r\n      });\r\n      setSelectedId(0);\r\n      setActiveRecipe();\r\n      alert('The recipe has been deleted successfully!');\r\n    }\r\n  };\r\n\r\n  // When update button is clicked\r\n  const updateClickHandler = () => {\r\n    updateModalOpen();\r\n    setMode('update');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <footer className={`row ${classes.footer}`}>\r\n        <div className='col-sm-12 col-md-6 col-lg-5'></div>\r\n        <div\r\n          className={`col-sm-12 col-md-6 col-lg-7 ${classes['button-container']}`}\r\n        >\r\n          {selectedRecipeId !== 0 && (\r\n            <>\r\n              <Button className={classes.button} onClick={updateClickHandler}>\r\n                Update\r\n              </Button>\r\n              <Button className={classes.button} onClick={deleteClickHandler}>\r\n                Delete\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport RecipeList from '../components/Recipes/RecipeList';\r\nimport RecipeDetail from '../components/Recipes/RecipeDetail';\r\nimport Footer from '../UI/Footer';\r\nconst ReadContent = ({ setMode }) => {\r\n  console.log('ReadContent render');\r\n\r\n  return (\r\n    <>\r\n      <main className='row'>\r\n        <div className='recipe col-sm-12 col-md-6 col-lg-5'>\r\n          <RecipeList />\r\n        </div>\r\n        <section className='recipe col-sm-12 col-md-6 col-lg-7'>\r\n          <RecipeDetail />\r\n        </section>\r\n      </main>\r\n      <Footer setMode={setMode} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReadContent;\r\n","import React from 'react';\r\nimport classes from './Card.module.css';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nfunction IngrediList({ icon, remove, className, ingredients }) {\r\n  // When Delete button is clicked on ingredient badge\r\n  const onDelete = (event) => {\r\n    remove(event.target.dataset.index);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {ingredients.length > 0\r\n        ? ingredients.map((ingredient, index) => (\r\n            <li\r\n              key={index}\r\n              data-index={index}\r\n              className={`${className ?? ''}`}\r\n              onClick={onDelete}\r\n            >\r\n              {ingredient}\r\n              {icon && <i data-index={index} className={icon} />}\r\n            </li>\r\n          ))\r\n        : ''}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IngrediList;\r\n","import classes from './FormModal.module.css';\r\nimport React, { useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Formik, Form, Field, useFormik, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Button from './Button';\r\nimport Card from './Card';\r\nimport IngrediList from './Recipes/IngrediList';\r\nimport { RecipesContext } from '../contexts/RecipesContext';\r\nimport { SelectedIdContext } from '../contexts/SelectedIdContext';\r\nimport { ModalContext } from '../contexts/ModalContext';\r\nimport { v4 as createId } from 'uuid';\r\n\r\n// Validation schema\r\nlet validationSchema = Yup.object().shape({\r\n  title: Yup.string().trim().strict(true).required('Required').min(1),\r\n  cookingTime: Yup.number()\r\n    .required('Required')\r\n    .positive('Invalid Cooking time')\r\n    .integer(),\r\n  servings: Yup.number()\r\n    .required('Required')\r\n    .positive('Invalid Servings')\r\n    .integer(),\r\n  ingredients: Yup.array()\r\n    .of(Yup.string())\r\n    .required('Must have ingredients')\r\n    .min(2, 'Minimum of 2 ingredients'),\r\n});\r\n\r\nfunction FormModal({ mode, setMode }) {\r\n  const {\r\n    activeRecipe,\r\n    setActiveRecipe,\r\n    dispatchRecipeList,\r\n    settingMode,\r\n    recipeList,\r\n  } = useContext(RecipesContext);\r\n  const { setSelectedId, selectedRecipeId } = useContext(SelectedIdContext);\r\n  const { setShowModal, closeModal } = useContext(ModalContext);\r\n\r\n  // When a new recipe is submitted\r\n  const addRecipeHandler = (recipe) => {\r\n    const newId = createId();\r\n    const newRecipe = { ...recipe, id: newId };\r\n    dispatchRecipeList({\r\n      type: 'ADD_RECIPE',\r\n      recipe: newRecipe,\r\n    });\r\n    setSelectedId(newId);\r\n    setActiveRecipe(newRecipe);\r\n    setMode('read');\r\n    closeModal();\r\n  };\r\n\r\n  // When modal close button is clicked\r\n  const closeHandler = () => {\r\n    // setMode('read');\r\n    settingMode(recipeList.length);\r\n    closeModal();\r\n  };\r\n\r\n  // When a updated recipe is submitted\r\n  const updateHandler = (values, id) => {\r\n    dispatchRecipeList({\r\n      type: 'UPDATE_RECIPE',\r\n      updatedRecipe: values,\r\n      id,\r\n    });\r\n    setActiveRecipe(values, (values.id = id));\r\n    setMode('read');\r\n    setShowModal(false);\r\n  };\r\n\r\n  // Getting values for updating form\r\n  var { id, title, cookingTime, servings, ingredients } = activeRecipe ?? '';\r\n\r\n  const formik = useFormik({\r\n    initialValues:\r\n      mode === 'create'\r\n        ? {\r\n            title: '',\r\n            cookingTime: '',\r\n            servings: '',\r\n            ingredient: '',\r\n            ingredients: [],\r\n          }\r\n        : mode === 'update'\r\n        ? {\r\n            title: title,\r\n            cookingTime: cookingTime,\r\n            servings: servings,\r\n            ingredients: ingredients,\r\n          }\r\n        : '',\r\n    onSubmit: (values) => {\r\n      console.log(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <div className={classes.backdrop}></div>,\r\n        document.getElementById('backdrop-root')\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <Formik\r\n          initialValues={formik.initialValues}\r\n          validationSchema={validationSchema}\r\n          onKeyDown={(event) => event.preventDefault()}\r\n          onSubmit={(values) =>\r\n            mode === 'create'\r\n              ? addRecipeHandler(values)\r\n              : updateHandler(values, selectedRecipeId)\r\n          }\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Card className={classes.modal}>\r\n              <Row className={`align-items-center ${classes['modal-top']}`}>\r\n                <Col xs={12} sm={3} className='d-flex justify-content-end'>\r\n                  <Button\r\n                    icon='fas fa-times'\r\n                    className={classes['modal-close']}\r\n                    onClick={closeHandler}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={9}>\r\n                  <header className={classes['modal-header']}>\r\n                    <h3 className='fw-bold'>\r\n                      {mode === 'create'\r\n                        ? 'Add a new recipe'\r\n                        : 'Update a recipe'}\r\n                    </h3>\r\n                  </header>\r\n                </Col>\r\n              </Row>\r\n              <Form>\r\n                <Row>\r\n                  <Col sm={12} md={6} className={classes.form}>\r\n                    <Row>\r\n                      {mode === 'update' && (\r\n                        <input type='hidden' name='id' value={id} />\r\n                      )}\r\n                      <Col className='mb-4'>\r\n                        <label htmlFor='title' className='form-label fw-bold'>\r\n                          Recipe Title\r\n                        </label>\r\n                        <Field\r\n                          type='text'\r\n                          id='title'\r\n                          name='title'\r\n                          className={`form-control ${classes.form}`}\r\n                        />\r\n                        {errors.title && touched.title ? (\r\n                          <div className={classes.error}>{errors.title}</div>\r\n                        ) : null}\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col xs={12} sm={6} className='mb-4'>\r\n                        <label\r\n                          htmlFor='cookingTime'\r\n                          className='form-label fw-bold'\r\n                        >\r\n                          Cook Time\r\n                        </label>\r\n                        <Field\r\n                          type='number'\r\n                          id='cookingTime'\r\n                          name='cookingTime'\r\n                          placeholder='min'\r\n                          className={`form-control ${classes.form}`}\r\n                          min='1'\r\n                          step='1'\r\n                        />\r\n                        {errors.cookingTime && touched.cookingTime ? (\r\n                          <div className={classes.error}>\r\n                            {errors.cookingTime}\r\n                          </div>\r\n                        ) : null}\r\n                      </Col>\r\n                      <Col xs={12} sm={6} className='mb-4'>\r\n                        <label\r\n                          htmlFor='servings'\r\n                          className='form-label fw-bold'\r\n                        >\r\n                          Servings\r\n                        </label>\r\n                        <Field\r\n                          type='number'\r\n                          id='servings'\r\n                          name='servings'\r\n                          placeholder='servings'\r\n                          className={`form-control ${classes.form}`}\r\n                          min='1'\r\n                          step='1'\r\n                        />\r\n                        {errors.servings && touched.servings ? (\r\n                          <div className={classes.error}>{errors.servings}</div>\r\n                        ) : null}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col sm={12} md={6} className={classes.form}>\r\n                    <Row>\r\n                      <div className='mb-3 align-items-center'>\r\n                        <label\r\n                          htmlFor='ingredients'\r\n                          className='form-label fw-bold'\r\n                        >\r\n                          Ingredients\r\n                        </label>\r\n                        <FieldArray name='ingredients'>\r\n                          {(fieldArrayProps) => {\r\n                            const { unshift, remove, form } = fieldArrayProps;\r\n                            const { values, setFieldValue } = form;\r\n                            const { ingredients } = values;\r\n                            return (\r\n                              <div>\r\n                                <Field\r\n                                  type='text'\r\n                                  id='ingredient'\r\n                                  name='ingredient'\r\n                                  className={`form-control ${classes.form}`}\r\n                                  placeholder='Enter your ingredient'\r\n                                  onKeyDown={(event) => {\r\n                                    if (\r\n                                      event.key === 'Enter' &&\r\n                                      event.target.value.trim().length !== 0\r\n                                    ) {\r\n                                      event.preventDefault();\r\n                                      unshift(event.target.value);\r\n                                      setFieldValue('ingredient', '');\r\n                                    }\r\n                                  }}\r\n                                />\r\n                                {errors.ingredients && touched.ingredients ? (\r\n                                  <div className={classes.error}>\r\n                                    {errors.ingredients}\r\n                                  </div>\r\n                                ) : null}\r\n                                <ul className={`mt-4 ${classes.ul}`}>\r\n                                  <IngrediList\r\n                                    icon={'fas fa-times'}\r\n                                    remove={remove}\r\n                                    ingredients={ingredients}\r\n                                    className={classes.li}\r\n                                  />\r\n                                </ul>\r\n                              </div>\r\n                            );\r\n                          }}\r\n                        </FieldArray>\r\n                      </div>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col className='my-2'>\r\n                    <Button type='submit'>save</Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Card>\r\n          )}\r\n        </Formik>,\r\n        document.getElementById('modal-root')\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormModal;\r\n","import React, { useContext } from 'react';\r\nimport FormModal from '../components/FormModal';\r\nimport { ModalContext } from '../contexts/ModalContext';\r\n\r\nfunction UpdateContent({ mode, setMode }) {\r\n  console.log('UpdateContent render');\r\n\r\n  const { showModal } = useContext(ModalContext);\r\n\r\n  return <>{showModal && <FormModal mode={mode} setMode={setMode} />}</>;\r\n}\r\n\r\nexport default UpdateContent;\r\n","import React, { useContext } from 'react';\r\nimport FormModal from '../components/FormModal';\r\nimport { ModalContext } from '../contexts/ModalContext';\r\n\r\nconst CreateContent = ({ mode, setMode }) => {\r\n  console.log('CreateContent render');\r\n  const { showModal } = useContext(ModalContext);\r\n\r\n  return <>{showModal && <FormModal mode={mode} setMode={setMode} />}</>;\r\n};\r\n\r\nexport default CreateContent;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Header from './UI/Header';\r\n\r\nimport WelcomeContent from './pages/WelcomeContent';\r\nimport ReadContent from './pages/ReadContent';\r\nimport UpdateContent from './pages/UpdateContent';\r\nimport CreateContent from './pages/CreateContent';\r\nimport RecipesContextProvider from './contexts/RecipesContext';\r\nimport SelectedIdContextProvider from './contexts/SelectedIdContext';\r\nimport ModalContextProvider from './contexts/ModalContext';\r\n\r\nconsole.log('First App render');\r\n\r\nfunction App() {\r\n  console.log('App render');\r\n  const [mode, setMode] = useState('read');\r\n  // Load recipes from local storage\r\n\r\n  return (\r\n    <div className='app container'>\r\n      <RecipesContextProvider setMode={setMode}>\r\n        <ModalContextProvider>\r\n          <Header setMode={setMode} />\r\n\r\n          <SelectedIdContextProvider>\r\n            {mode === 'welcome' ? (\r\n              <WelcomeContent />\r\n            ) : mode === 'read' ? (\r\n              <ReadContent mode={mode} setMode={setMode} />\r\n            ) : mode === 'create' ? (\r\n              <CreateContent mode={mode} setMode={setMode} />\r\n            ) : mode === 'update' ? (\r\n              <UpdateContent mode={mode} setMode={setMode} />\r\n            ) : (\r\n              ''\r\n            )}\r\n          </SelectedIdContextProvider>\r\n        </ModalContextProvider>\r\n      </RecipesContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"RecipeList_ul__vjicB\",\"li\":\"RecipeList_li__3QU8B\",\"active\":\"RecipeList_active__rgA30\",\"icon\":\"RecipeList_icon__29edH\",\"p\":\"RecipeList_p__37Ayp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3K023\",\"button-container\":\"Footer_button-container__1EUq4\",\"button\":\"Footer_button__2Iloa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormModal_form__3nZRu\",\"backdrop\":\"FormModal_backdrop__1ocsl\",\"modal\":\"FormModal_modal__3byJB\",\"modal-top\":\"FormModal_modal-top__v-cgV\",\"modal-header\":\"FormModal_modal-header__1guNf\",\"modal-close\":\"FormModal_modal-close__3nPam\",\"ul\":\"FormModal_ul__ng3SX\",\"error\":\"FormModal_error__3cHIv\",\"li\":\"FormModal_li__seVoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2l-Rf\",\"icon\":\"Button_icon__3pdlG\",\"fill\":\"Button_fill__3444V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WelcomeContent_container__2_ozm\",\"h2\":\"WelcomeContent_h2__2YMA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1jH2J\",\"icon\":\"Logo_icon__ZLdKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"RecipeDetail_ul__1BjOt\",\"ingredients\":\"RecipeDetail_ingredients__2zfhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-box\":\"Header_btn-box__1UoX_\",\"btn-mobile\":\"Header_btn-mobile__3ine2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35WdF\"};"],"sourceRoot":""}