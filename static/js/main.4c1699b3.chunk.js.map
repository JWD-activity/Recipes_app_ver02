{"version":3,"sources":["components/Logo.js","components/Button.js","UI/Header.js","UI/Footer.js","pages/WelcomeContent.js","components/Recipes/RecipeList.js","components/Recipes/IngrediList.js","components/Recipes/RecipeDetail.js","pages/ReadContent.js","components/Card.js","components/FormModal.js","pages/UpdateContent.js","pages/CreateContent.js","App.js","index.js","UI/Footer.module.css","components/Recipes/RecipeList.module.css","components/FormModal.module.css","components/Button.module.css","pages/WelcomeContent.module.css","components/Logo.module.css","components/Recipes/RecipeDetail.module.css","UI/Header.module.css","components/Card.module.css"],"names":["Logo","className","classes","Button","props","onClick","button","fill","icon","children","Header","useState","smallButton","setSmallButton","showButton","window","innerWidth","useEffect","addEventListener","Footer","onUpdate","setMode","selectedRecipeId","onDelete","console","log","footer","WelcomeContent","container","h2","RecipeList","recipeList","isActive","ul","p","map","recipe","id","li","active","title","IngrediList","listOfIngredient","remove","list","event","target","dataset","index","length","ingredient","RecipeDetail","time","cookingTime","Math","floor","servings","ingredients","renderDetailInfo","ReadContent","onRecipeClick","data","readRecipe","Card","card","validationSchema","Yup","shape","required","min","positive","integer","of","FormModal","onClose","submitHandler","mode","formik","useFormik","initialValues","onSubmit","values","JSON","stringify","ReactDOM","createPortal","backdrop","document","getElementById","onKeyDown","preventDefault","updatedRecipe","updateHandler","errors","touched","modal","Row","Col","xs","sm","md","form","type","name","value","htmlFor","error","placeholder","step","fieldArrayProps","push","setFieldValue","key","trim","UpdateContent","onCloseModal","CreateContent","onAddRecipe","_id","createId","App","setRecipeList","showModal","setShowModal","setSelectedRecipeId","localStorage","getItem","recipes","parse","setItem","closeModalHanlder","filter","findRecipe","prevRecipeList","confirm","find","getIndex","splice","alert","render","module","exports"],"mappings":"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","file":"static/js/main.4c1699b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Logo.module.css';\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className={`${classes['logo']}`}>\r\n      <i className={`${classes['icon']} fas fa-utensils`} />\r\n      COOKBOOK\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={`${classes.button} ${classes.fill} ${props.className ?? ''}`}\r\n    >\r\n      {props.icon && <i className={`${props.icon} ${classes.icon}`}></i>}\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Logo from '../components/Logo';\r\nimport Button from '../components/Button';\r\nimport classes from './Header.module.css';\r\n\r\nfunction Header(props) {\r\n  const [smallButton, setSmallButton] = useState(true);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 576) setSmallButton(false);\r\n    else setSmallButton(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n\r\n  return (\r\n    <header className='row py-4 px-3 align-items-center'>\r\n      <div className='col-sm-4'>\r\n        <Logo />\r\n      </div>\r\n      <div className={`col-sm-8 ${classes['btn-box']}`}>\r\n        <Button icon='fas fa-plus-square' onClick={props.onClick}>\r\n          {smallButton && 'Add recipe'}\r\n        </Button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Button from '../components/Button';\r\nimport classes from './Footer.module.css';\r\n\r\nexport default function Footer(props) {\r\n  const { onUpdate, setMode, selectedRecipeId, onDelete } = props;\r\n\r\n  console.log('footer render');\r\n  const deleteClickHandler = () => {\r\n    setMode('delete');\r\n    onDelete();\r\n  };\r\n\r\n  return (\r\n    <footer className={`row ${classes.footer}`}>\r\n      <div className='col-sm-12 col-md-6 col-lg-5'></div>\r\n      <div\r\n        className={`col-sm-12 col-md-6 col-lg-7 ${classes['button-container']}`}\r\n      >\r\n        {selectedRecipeId !== 0 && (\r\n          <>\r\n            <Button className={classes.button} onClick={onUpdate}>\r\n              Update\r\n            </Button>\r\n            <Button className={classes.button} onClick={deleteClickHandler}>\r\n              Delete\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport classes from './WelcomeContent.module.css';\r\n\r\nfunction WelcomeContent(props) {\r\n  console.log('WelcomeContent render');\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes['h2-box']}>\r\n        <h2 className={classes.h2}>Welcome to COOKBOOK</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeContent;\r\n","import React from 'react';\r\nimport classes from './RecipeList.module.css';\r\n\r\nfunction RecipeList(props) {\r\n  console.log('RecipeList render');\r\n  const { onClick, recipeList, isActive } = props;\r\n  return (\r\n    <ul className={classes.ul}>\r\n      <p className={classes.p}>\r\n        <i className='fas fa-arrow-circle-down me-2' />\r\n        Select a recipe to check the details.\r\n      </p>\r\n      {recipeList.map((recipe) => (\r\n        <li\r\n          key={recipe.id}\r\n          data-id={recipe.id}\r\n          className={`${classes.li} text-capitalize ${\r\n            isActive.id === recipe.id ? classes.active : ''\r\n          }`}\r\n          onClick={onClick}\r\n        >\r\n          {recipe.title}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default RecipeList;\r\n","import React from 'react';\r\n\r\nfunction IngrediList(props) {\r\n  const { listOfIngredient, remove } = props;\r\n  let list = listOfIngredient;\r\n  const onDelete = (event) => {\r\n    remove(event.target.dataset.index);\r\n  };\r\n  return (\r\n    <>\r\n      {list.length > 0\r\n        ? list.map((ingredient, index) => (\r\n            <li\r\n              key={index}\r\n              data-index={index}\r\n              className={`${props.className ?? ''}`}\r\n              onClick={onDelete}\r\n            >\r\n              {ingredient}\r\n              {props.icon && <i data-index={index} className={props.icon} />}\r\n            </li>\r\n          ))\r\n        : ''}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IngrediList;\r\n","import React from 'react';\r\nimport classes from './RecipeDetail.module.css';\r\nimport IngrediList from '../Recipes/IngrediList';\r\n\r\nfunction RecipeDetail(props) {\r\n  console.log('Recipe Detail render');\r\n  const { recipe } = props;\r\n  const calcCookingTime = (time) => {\r\n    if (time >= 60) {\r\n      let hours = Math.floor(time / 60);\r\n      var min = time % 60;\r\n      return hours + 'hr ' + min + 'mins';\r\n    } else return time + 'mins';\r\n  };\r\n\r\n  const renderDetailInfo = (recipe) => {\r\n    return recipe ? (\r\n      <ul key={recipe.id} className={`row ${classes.ul}`}>\r\n        <li>{recipe.title}</li>\r\n        <li className={'col-md-4 col-sm-3'}>\r\n          <i className='far fa-clock me-2'></i>\r\n          {calcCookingTime(+recipe.cookingTime)}\r\n        </li>\r\n        <li className={'col-md-4 col-sm-3'}>\r\n          <i className='fas fa-user-friends me-2'></i>\r\n          {recipe.servings} servings\r\n        </li>\r\n        <li>Ingredients:</li>\r\n        <ul className={classes.ingredients}>\r\n          {<IngrediList listOfIngredient={recipe.ingredients} />}\r\n        </ul>\r\n      </ul>\r\n    ) : (\r\n      ''\r\n    );\r\n  };\r\n\r\n  return <>{renderDetailInfo(recipe)}</>;\r\n}\r\n\r\nexport default RecipeDetail;\r\n","import React from 'react';\r\nimport RecipeList from '../components/Recipes/RecipeList';\r\nimport RecipeDetail from '../components/Recipes/RecipeDetail';\r\n\r\nfunction ReadContent(props) {\r\n  console.log('ReadContent render');\r\n  const { recipeList, onRecipeClick, selectedRecipeId, readRecipe } = props;\r\n\r\n  const data = readRecipe(selectedRecipeId);\r\n  const [recipe] = data;\r\n  //recipe is single recipeobject\r\n\r\n  const recipeClickHandler = (event) => {\r\n    onRecipeClick(event.target.dataset.id);\r\n  };\r\n\r\n  return (\r\n    <main className='row'>\r\n      <div className='recipe col-sm-12 col-md-6 col-lg-5'>\r\n        <RecipeList\r\n          recipeList={recipeList}\r\n          onClick={recipeClickHandler}\r\n          isActive={recipe ?? ''}\r\n        />\r\n      </div>\r\n      <section className='recipe col-sm-12 col-md-6 col-lg-7'>\r\n        <RecipeDetail recipe={recipe} />\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ReadContent;\r\n","import React from 'react';\r\nimport classes from './Card.module.css';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import classes from './FormModal.module.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Formik, Form, Field, useFormik, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Button from './Button';\r\nimport Card from './Card';\r\nimport IngrediList from './Recipes/IngrediList';\r\n\r\nlet validationSchema = Yup.object().shape({\r\n  title: Yup.string().required('Required').min(1),\r\n  cookingTime: Yup.number()\r\n    .required('Required')\r\n    .positive('Invalid Cooking time')\r\n    .integer(),\r\n  servings: Yup.number()\r\n    .required('Required')\r\n    .positive('Invalid Servings')\r\n    .integer(),\r\n  ingredients: Yup.array()\r\n    .of(Yup.string())\r\n    .required('Must have ingredients')\r\n    .min(2, 'Minimum of 2 ingredients'),\r\n});\r\n\r\nfunction FormModal(props) {\r\n  const {\r\n    onClose,\r\n    submitHandler,\r\n    recipeList,\r\n    onUpdate,\r\n    selectedRecipeId,\r\n    readRecipe,\r\n    mode,\r\n  } = props;\r\n  const data = selectedRecipeId && readRecipe(selectedRecipeId);\r\n  const [recipe] = data ?? '';\r\n  const { title, cookingTime, servings, ingredients } = recipe ?? '';\r\n\r\n  const updateHandler = (values) => {\r\n    const { title, cookingTime, servings, ingredients } = values;\r\n    const updatedRecipe = recipeList.map((recipe) =>\r\n      recipe.id === selectedRecipeId\r\n        ? {\r\n            id: recipe.id,\r\n            title: title,\r\n            cookingTime: cookingTime,\r\n            servings: servings,\r\n            ingredients: ingredients,\r\n          }\r\n        : recipe\r\n    );\r\n\r\n    onUpdate(updatedRecipe);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues:\r\n      mode === 'create'\r\n        ? {\r\n            title: '',\r\n            cookingTime: '',\r\n            servings: '',\r\n            ingredient: '',\r\n            ingredients: [],\r\n          }\r\n        : mode === 'update'\r\n        ? {\r\n            title: title,\r\n            cookingTime: cookingTime,\r\n            servings: servings,\r\n            ingredients: ingredients,\r\n          }\r\n        : '',\r\n    onSubmit: (values) => {\r\n      console.log(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <div className={classes.backdrop}></div>,\r\n        document.getElementById('backdrop-root')\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <Formik\r\n          initialValues={formik.initialValues}\r\n          validationSchema={validationSchema}\r\n          onKeyDown={(event) => event.preventDefault()}\r\n          onSubmit={(values) =>\r\n            mode === 'create' ? submitHandler(values) : updateHandler(values)\r\n          }\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Card className={classes.modal}>\r\n              <Row className={`align-items-center ${classes['modal-top']}`}>\r\n                <Col xs={12} sm={3} className='d-flex justify-content-end'>\r\n                  <Button\r\n                    icon='fas fa-times'\r\n                    className={classes['modal-close']}\r\n                    onClick={onClose}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={9}>\r\n                  <header className={classes['modal-header']}>\r\n                    <h3 className='fw-bold'>\r\n                      {mode === 'create'\r\n                        ? 'Add a new recipe'\r\n                        : 'Update a recipe'}\r\n                    </h3>\r\n                  </header>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Form>\r\n                <Row>\r\n                  <Col sm={12} md={6} className={classes.form}>\r\n                    <Row>\r\n                      {mode === 'update' && (\r\n                        <input type='hidden' name='id' value={recipe.id} />\r\n                      )}\r\n                      <Col className='mb-4'>\r\n                        <label htmlFor='title' className='form-label fw-bold'>\r\n                          Recipe Title\r\n                        </label>\r\n                        <Field\r\n                          type='text'\r\n                          id='title'\r\n                          name='title'\r\n                          className={`form-control ${classes.form}`}\r\n                        />\r\n                        {errors.title && touched.title ? (\r\n                          <div className={classes.error}>{errors.title}</div>\r\n                        ) : null}\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                      <Col xs={12} sm={6} className='mb-4'>\r\n                        <label\r\n                          htmlFor='cookingTime'\r\n                          className='form-label fw-bold'\r\n                        >\r\n                          Cook Time\r\n                        </label>\r\n                        <Field\r\n                          type='number'\r\n                          id='cookingTime'\r\n                          name='cookingTime'\r\n                          placeholder='min'\r\n                          className={`form-control ${classes.form}`}\r\n                          min='1'\r\n                          step='1'\r\n                        />\r\n                        {errors.cookingTime && touched.cookingTime ? (\r\n                          <div className={classes.error}>\r\n                            {errors.cookingTime}\r\n                          </div>\r\n                        ) : null}\r\n                      </Col>\r\n                      <Col xs={12} sm={6} className='mb-4'>\r\n                        <label\r\n                          htmlFor='servings'\r\n                          className='form-label fw-bold'\r\n                        >\r\n                          Servings\r\n                        </label>\r\n                        <Field\r\n                          type='number'\r\n                          id='servings'\r\n                          name='servings'\r\n                          placeholder='servings'\r\n                          className={`form-control ${classes.form}`}\r\n                          min='1'\r\n                          step='1'\r\n                        />\r\n                        {errors.servings && touched.servings ? (\r\n                          <div className={classes.error}>{errors.servings}</div>\r\n                        ) : null}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n\r\n                  <Col sm={12} md={6} className={classes.form}>\r\n                    <Row>\r\n                      <div className='mb-3 align-items-center'>\r\n                        <label\r\n                          htmlFor='ingredients'\r\n                          className='form-label fw-bold'\r\n                        >\r\n                          Ingredients\r\n                        </label>\r\n\r\n                        <FieldArray name='ingredients'>\r\n                          {(fieldArrayProps) => {\r\n                            const { push, remove, form } = fieldArrayProps;\r\n                            const { values, setFieldValue } = form;\r\n                            const { ingredients } = values;\r\n\r\n                            return (\r\n                              <div>\r\n                                <Field\r\n                                  type='text'\r\n                                  id='ingredient'\r\n                                  name='ingredient'\r\n                                  className={`form-control ${classes.form}`}\r\n                                  placeholder='Enter your ingredient'\r\n                                  onKeyDown={(event) => {\r\n                                    if (\r\n                                      event.key === 'Enter' &&\r\n                                      event.target.value.trim().length !== 0\r\n                                    ) {\r\n                                      event.preventDefault();\r\n                                      push(event.target.value);\r\n                                      setFieldValue('ingredient', '');\r\n                                    }\r\n                                  }}\r\n                                />\r\n                                {errors.ingredients && touched.ingredients ? (\r\n                                  <div className={classes.error}>\r\n                                    {errors.ingredients}\r\n                                  </div>\r\n                                ) : null}\r\n                                <ul className={`mt-4 ${classes.ul}`}>\r\n                                  <IngrediList\r\n                                    listOfIngredient={ingredients}\r\n                                    icon={'fas fa-times'}\r\n                                    remove={remove}\r\n                                    className={classes.li}\r\n                                  />\r\n                                </ul>\r\n                              </div>\r\n                            );\r\n                          }}\r\n                        </FieldArray>\r\n                      </div>\r\n                    </Row>\r\n                  </Col>\r\n\r\n                  <Col className='my-2'>\r\n                    <Button type='submit'>save</Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Card>\r\n          )}\r\n        </Formik>,\r\n        document.getElementById('modal-root')\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormModal;\r\n","import React from 'react';\r\nimport FormModal from '../components/FormModal';\r\n\r\nfunction UpdateContent(props) {\r\n  console.log('UpdateContent render');\r\n  const {\r\n    mode,\r\n    modal,\r\n    onCloseModal,\r\n    recipeList,\r\n    onUpdate,\r\n    selectedRecipeId,\r\n    readRecipe,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {modal && (\r\n        <FormModal\r\n          mode={mode}\r\n          onClose={onCloseModal}\r\n          onUpdate={onUpdate}\r\n          recipeList={recipeList}\r\n          selectedRecipeId={selectedRecipeId}\r\n          readRecipe={readRecipe}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateContent;\r\n","import React from 'react';\r\nimport { v4 as createId } from 'uuid';\r\nimport FormModal from '../components/FormModal';\r\n\r\nfunction CreateContent(props) {\r\n  console.log('CreateContent render');\r\n\r\n  const { mode, modal, onCloseModal, onAddRecipe, setMode } = props;\r\n\r\n  const addRecipeHandler = (values) => {\r\n    const _id = createId();\r\n    onAddRecipe(values, (values.id = _id));\r\n    onCloseModal();\r\n    setMode('read');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {modal && (\r\n        <FormModal\r\n          mode={mode}\r\n          onClose={onCloseModal}\r\n          submitHandler={addRecipeHandler}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from './UI/Header';\r\nimport Footer from './UI/Footer';\r\n\r\nimport Welcome from './pages/WelcomeContent';\r\nimport ReadContent from './pages/ReadContent';\r\nimport UpdateContent from './pages/UpdateContent';\r\nimport CreateContent from './pages/CreateContent';\r\n\r\nconsole.log('First App render');\r\n\r\nfunction App() {\r\n  console.log('App render');\r\n  const [recipeList, setRecipeList] = useState([\r\n    {\r\n      id: '59d0208e-0490',\r\n      title: 'Garlic and Green Olives Pasta',\r\n      cookingTime: 15,\r\n      servings: 4,\r\n      ingredients: [\r\n        '12oz. pappardelle or other wide noodle',\r\n        'Kosher salt',\r\n        '¼cup extra-virgin olive oil',\r\n        '8 garlic cloves',\r\n        '1cup finely chopped parsley',\r\n        '1cup pitted Castelvetrano olives',\r\n        'crushed red pepper flakes',\r\n        'unsalted butter',\r\n        '1 cup basil leaves',\r\n        '2tsp. fresh lemon juice',\r\n      ],\r\n    },\r\n    {\r\n      id: '59d0208e-0491',\r\n      title: 'Greek Salad',\r\n      cookingTime: 10,\r\n      servings: 3,\r\n      ingredients: [\r\n        '6 firm ripe tomatoes',\r\n        '3 Lebanese cucumbers',\r\n        '1 red onion, sliced into rings',\r\n        '1 red capsicum, halved, deseeded, coarsely chopped',\r\n        '200g marinated Greek olives',\r\n        '220g marinated feta, coarsely chopped',\r\n        '1 tsp dried Greek oregano',\r\n        '1 tsp salt',\r\n        '125ml (1/2 cup) olive oil',\r\n        '60ml (1/4 cup) white vinegar',\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const [mode, setMode] = useState('welcome');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedRecipeId, setSelectedRecipeId] = useState(0);\r\n\r\n  // Load recipes from local storage\r\n  useEffect(() => {\r\n    if (localStorage.getItem('recipes') !== null) {\r\n      const recipes = localStorage.getItem('recipes');\r\n      setRecipeList(JSON.parse(recipes));\r\n      recipeList.length > 0 ? setMode('read') : setMode('welcome');\r\n    }\r\n  }, []);\r\n\r\n  // Save recipes to local storage\r\n  useEffect(() => {\r\n    localStorage.setItem('recipes', JSON.stringify(recipeList));\r\n    recipeList.length > 0 ? setMode('read') : setMode('welcome');\r\n  }, [recipeList]);\r\n\r\n  // Add a new recipe handler\r\n  const addNewRecipeHandler = (recipe) => {\r\n    console.log('New recipe was added:', recipe);\r\n    setRecipeList((prevRecipeList) => {\r\n      return [recipe, ...prevRecipeList];\r\n    });\r\n    setSelectedRecipeId(recipe.id);\r\n  };\r\n\r\n  // Delete a selected recipe handler\r\n  const deleteRecipeHanlder = () => {\r\n    if (\r\n      window.confirm(\r\n        'Are you sure want to delete the recipe? If you delete the recipe, you will permanently lose your selected recipe.'\r\n      )\r\n    ) {\r\n      var recipes = [...recipeList];\r\n\r\n      // Find selected recipe id then delete it from array\r\n      const index = recipes.find((recipe, index) => {\r\n        var getIndex;\r\n        if (recipe.id === selectedRecipeId) getIndex = index;\r\n        return getIndex;\r\n      });\r\n      recipes.splice(index, 1);\r\n\r\n      // Save remaining recipes\r\n      setRecipeList(recipes);\r\n\r\n      // Reset mode and selectedRecipeId\r\n      setSelectedRecipeId(0);\r\n      alert('The recipe has been deleted successfully!');\r\n    }\r\n    recipeList.length > 0 ? setMode('read') : setMode('welcome');\r\n  };\r\n\r\n  // Updated recipe handler\r\n  const updateRecipeHandler = (recipe) => {\r\n    setRecipeList(recipe);\r\n    setMode('read');\r\n  };\r\n\r\n  // Close modal handler\r\n  const closeModalHanlder = () => {\r\n    recipeList.length > 0 ? setMode('read') : setMode('welcome');\r\n    setShowModal(false);\r\n  };\r\n\r\n  // (Add a new recipe) modal open handler\r\n  const createModalOpenHandler = () => {\r\n    setMode('create');\r\n    setShowModal(true);\r\n  };\r\n\r\n  // (Update seleted recipe) modal open handler\r\n  const updateModalOpenHandler = () => {\r\n    setMode('update');\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Render detail of selected recipe\r\n  const readRecipe = (id) => {\r\n    const getRecipe = recipeList.filter((recipe) => {\r\n      var findRecipe;\r\n      if (recipe.id === id) findRecipe = recipe;\r\n      return findRecipe;\r\n    });\r\n    return getRecipe;\r\n  };\r\n\r\n  // Recipe selecte handler (When recipe is clicked from list)\r\n  const recipClickHandler = (id) => {\r\n    setSelectedRecipeId(id);\r\n  };\r\n\r\n  return (\r\n    <div className='app container'>\r\n      <Header onClick={createModalOpenHandler} />\r\n      {mode === 'welcome' ? (\r\n        <Welcome />\r\n      ) : mode === 'read' ? (\r\n        <>\r\n          <ReadContent\r\n            mode={mode}\r\n            recipeList={recipeList}\r\n            selectedRecipeId={selectedRecipeId}\r\n            onRecipeClick={recipClickHandler}\r\n            readRecipe={readRecipe}\r\n          />\r\n        </>\r\n      ) : mode === 'create' ? (\r\n        <CreateContent\r\n          mode={mode}\r\n          modal={showModal}\r\n          onCloseModal={closeModalHanlder}\r\n          onAddRecipe={addNewRecipeHandler}\r\n          setMode={setMode}\r\n        />\r\n      ) : mode === 'update' ? (\r\n        <UpdateContent\r\n          mode={mode}\r\n          modal={showModal}\r\n          recipeList={recipeList}\r\n          selectedRecipeId={selectedRecipeId}\r\n          onCloseModal={closeModalHanlder}\r\n          onUpdate={updateRecipeHandler}\r\n          readRecipe={readRecipe}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Footer\r\n        selectedRecipeId={selectedRecipeId}\r\n        onUpdate={updateModalOpenHandler}\r\n        setMode={setMode}\r\n        onDelete={deleteRecipeHanlder}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3K023\",\"button-container\":\"Footer_button-container__1EUq4\",\"button\":\"Footer_button__2Iloa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"RecipeList_ul__vjicB\",\"li\":\"RecipeList_li__3QU8B\",\"active\":\"RecipeList_active__rgA30\",\"icon\":\"RecipeList_icon__29edH\",\"p\":\"RecipeList_p__37Ayp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormModal_form__3nZRu\",\"backdrop\":\"FormModal_backdrop__1ocsl\",\"modal\":\"FormModal_modal__3byJB\",\"modal-top\":\"FormModal_modal-top__v-cgV\",\"modal-header\":\"FormModal_modal-header__1guNf\",\"modal-close\":\"FormModal_modal-close__3nPam\",\"ul\":\"FormModal_ul__ng3SX\",\"error\":\"FormModal_error__3cHIv\",\"li\":\"FormModal_li__seVoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2l-Rf\",\"icon\":\"Button_icon__3pdlG\",\"fill\":\"Button_fill__3444V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WelcomeContent_container__2_ozm\",\"h2\":\"WelcomeContent_h2__2YMA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1jH2J\",\"icon\":\"Logo_icon__ZLdKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"RecipeDetail_ul__1BjOt\",\"ingredients\":\"RecipeDetail_ingredients__2zfhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-box\":\"Header_btn-box__1UoX_\",\"btn-mobile\":\"Header_btn-mobile__3ine2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35WdF\"};"],"sourceRoot":""}