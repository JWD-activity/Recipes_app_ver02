{"version":3,"sources":["components/Logo.js","components/Button.js","contexts/ModalContext.js","UI/Header.js","pages/WelcomeContent.js","reducers/recipeReducer.js","utils/constants.js","contexts/RecipesContext.js","contexts/SelectedIdContext.js","components/Recipes/RecipeName.js","components/Recipes/RecipeList.js","components/Recipes/RecipeDetail.js","components/Pagination.js","pages/ReadContent.js","components/Card.js","components/Recipes/IngrediList.js","components/FormModal.js","pages/UpdateContent.js","pages/CreateContent.js","App.js","index.js","components/Recipes/RecipeDetail.module.css","components/Button.module.css","pages/WelcomeContent.module.css","components/FormModal.module.css","components/Logo.module.css","components/Recipes/RecipeList.module.css","components/Recipes/RecipeName.module.css","components/Pagination.module.css","UI/Header.module.css","components/Card.module.css"],"names":["Logo","className","classes","logo","icon","React","memo","Button","props","type","onClick","button","fill","children","ModalContext","createContext","ModalContextProvider","useState","showModal","setShowModal","Provider","value","closeModal","createModalOpen","updateModalOpen","Header","setMode","useContext","smallButton","setSmallButton","showButton","window","innerWidth","useEffect","addEventListener","WelcomeContent","container","h2","recipeReducer","state","action","id","recipe","title","cookingTime","servings","ingredients","foundIndex","find","index","splice","map","updatedRecipe","INIT_RECIPES","RecipesContext","RecipesContextProvider","useReducer","localData","localStorage","getItem","JSON","parse","recipeList","dispatchRecipeList","activeRecipe","setActiveRecipe","settingMode","length","setItem","stringify","recipeLength","readRecipe","filter","SelectedIdContext","SelectedIdContextProvider","selectedRecipeId","setSelectedRecipeId","setSelectedId","RecipeName","recipeId","name","clickHandler","li","active","RecipeList","page","startIndex","selectedList","slice","event","target","dataset","ul","p","RecipeDetail","time","hours","Math","floor","min","calcCookingTime","ingredient","confirm","alert","Pagination","currPage","num","total","currentPage","numPages","Array","keys","disabled","i","span","renderNextBtn","ReadContent","setCurrentPage","totalPages","setTotalPages","ceil","Card","card","IngrediList","remove","onDelete","validationSchema","Yup","shape","trim","strict","required","positive","integer","of","FormModal","mode","closeHandler","formik","useFormik","initialValues","onSubmit","values","console","log","ReactDOM","createPortal","backdrop","document","getElementById","onKeyDown","preventDefault","newId","createId","newRecipe","addRecipeHandler","updateHandler","errors","touched","modal","Row","Col","xs","sm","md","form","htmlFor","error","placeholder","step","fieldArrayProps","unshift","setFieldValue","key","UpdateContent","CreateContent","App","render","module","exports"],"mappings":"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","file":"static/js/main.3358dd6e.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Logo.module.css';\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className={classes.logo}>\r\n      <i className={`${classes.icon} fas fa-utensils`} />\r\n      COOKBOOK\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Logo);\r\n","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      type={props.type || ''}\r\n      onClick={props.onClick}\r\n      className={`${classes.button} ${classes.fill} ${props.className ?? ''}`}\r\n    >\r\n      {props.icon && <i className={`${props.icon} ${classes.icon}`}></i>}\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalContextProvider = (props) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Close modal handler\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // (Add a new recipe) modal open handler\r\n  const createModalOpen = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  // (update a recipe) modal open handler\r\n  const updateModalOpen = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        showModal,\r\n        setShowModal,\r\n        closeModal,\r\n        createModalOpen,\r\n        updateModalOpen,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalContextProvider;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Logo from '../components/Logo';\r\nimport Button from '../components/Button';\r\nimport classes from './Header.module.css';\r\nimport { ModalContext } from '../contexts/ModalContext';\r\n\r\nfunction Header({ setMode }) {\r\n  const { createModalOpen } = useContext(ModalContext);\r\n  const [smallButton, setSmallButton] = useState(true);\r\n\r\n  // When window size(width) is less than 576px show mobile version of button\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 576) setSmallButton(false);\r\n    else setSmallButton(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n\r\n  // When add a new recipe button is clicked\r\n  const clickHandler = () => {\r\n    setMode('create');\r\n    createModalOpen();\r\n  };\r\n\r\n  return (\r\n    <header className='row py-4 px-3 align-items-center'>\r\n      <div className='col-sm-4'>\r\n        <Logo />\r\n      </div>\r\n      <div className={`col-sm-8 ${classes['btn-box']}`}>\r\n        <Button icon='fas fa-plus-square' onClick={clickHandler}>\r\n          {smallButton && 'Add recipe'}\r\n        </Button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport classes from './WelcomeContent.module.css';\r\n\r\nfunction WelcomeContent() {\r\n  // console.log('WelcomeContent render');\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes['h2-box']}>\r\n        <h2 className={classes.h2}>Welcome to COOKBOOK</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeContent;\r\n","export function recipeReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD_RECIPE':\r\n      return [\r\n        {\r\n          id: action.recipe.id,\r\n          title: action.recipe.title,\r\n          cookingTime: action.recipe.cookingTime,\r\n          servings: action.recipe.servings,\r\n          ingredients: action.recipe.ingredients,\r\n        },\r\n        ...state,\r\n      ];\r\n\r\n    case 'REMOVE_RECIPE':\r\n      let foundIndex;\r\n      state.find((recipe, index) => {\r\n        if (recipe.id === action.id) {\r\n          foundIndex = index;\r\n        }\r\n      });\r\n      state.splice(foundIndex, 1);\r\n      return state;\r\n\r\n    case 'UPDATE_RECIPE':\r\n      return state.map((recipe) =>\r\n        recipe.id === action.id\r\n          ? {\r\n              id: recipe.id,\r\n              title: action.updatedRecipe.title,\r\n              cookingTime: action.updatedRecipe.cookingTime,\r\n              servings: action.updatedRecipe.servings,\r\n              ingredients: action.updatedRecipe.ingredients,\r\n            }\r\n          : recipe\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const RECIPE_PER_PAGE = 7;\r\nexport const INIT_RECIPES = [\r\n  {\r\n    id: '59d0208e-0490',\r\n    title: 'Garlic and Green Olives Pasta',\r\n    cookingTime: 15,\r\n    servings: 4,\r\n    ingredients: [\r\n      '12oz. pappardelle or other wide noodle',\r\n      'Kosher salt',\r\n      '¼cup extra-virgin olive oil',\r\n      '8 garlic cloves',\r\n      '1cup finely chopped parsley',\r\n      '1cup pitted Castelvetrano olives',\r\n      'crushed red pepper flakes',\r\n      'unsalted butter',\r\n      '1 cup basil leaves',\r\n      '2tsp. fresh lemon juice',\r\n    ],\r\n  },\r\n  {\r\n    id: '59d0208e-0491',\r\n    title: 'Greek Salad',\r\n    cookingTime: 10,\r\n    servings: 3,\r\n    ingredients: [\r\n      '6 firm ripe tomatoes',\r\n      '3 Lebanese cucumbers',\r\n      '1 red onion, sliced into rings',\r\n      '1 red capsicum, halved, deseeded, coarsely chopped',\r\n      '200g marinated Greek olives',\r\n      '220g marinated feta, coarsely chopped',\r\n      '1 tsp dried Greek oregano',\r\n      '1 tsp salt',\r\n      '125ml (1/2 cup) olive oil',\r\n      '60ml (1/4 cup) white vinegar',\r\n    ],\r\n  },\r\n  {\r\n    id: '59d0208e-0492',\r\n    title: 'Potato Salad',\r\n    cookingTime: 10,\r\n    servings: 6,\r\n    ingredients: [\r\n      '3 lb. gold potatoes, chopped',\r\n      'salt',\r\n      '1 1/2 cup. mayonnaise',\r\n      '1 small red onion, finely chopped',\r\n      '1 tbsp. Dijon mustard',\r\n      '1 tbsp. lemon juice',\r\n      '1/4 cup. chopped pickles',\r\n      '1/4 cup. finely chopped chives',\r\n      'Freshly ground black pepper',\r\n    ],\r\n  },\r\n  {\r\n    id: '59d0208e-0493',\r\n    title: 'Garlic Pizza',\r\n    cookingTime: 20,\r\n    servings: 4,\r\n    ingredients: [\r\n      '3/4 cup butter',\r\n      '1 tbs garlic crushed',\r\n      '1 pinch chives',\r\n      '2 cups tasty cheese grated',\r\n      '2 tbs parmesan cheese grated',\r\n      'olive oil',\r\n      'dough',\r\n    ],\r\n  },\r\n  {\r\n    id: '59d0208e-0494',\r\n    title: 'Pumpkin soup',\r\n    cookingTime: 40,\r\n    servings: 6,\r\n    ingredients: [\r\n      '2 tbsp olive oil',\r\n      '1 onion, finely chopped',\r\n      '1 leek, white part only, finely sliced',\r\n      '1 garlic clove, crushed',\r\n      '1/2 tsp ground coriander',\r\n      '1 tsp ground cumin',\r\n      '1kg peeled pumpkin, diced',\r\n      '1 large potato, peeled, diced',\r\n      '1L Massel chicken style liquid stock or vegetable liquid stock',\r\n      '1/2 cup (125ml) thin cream',\r\n    ],\r\n  },\r\n  {\r\n    id: '59d0208e-0495',\r\n    title: 'Green soup',\r\n    cookingTime: 40,\r\n    servings: 6,\r\n    ingredients: [\r\n      '2 tbsp olive oil',\r\n      '1 onion, finely chopped',\r\n      '1 leek, white part only, finely sliced',\r\n      '1 garlic clove, crushed',\r\n      '1/2 tsp ground coriander',\r\n      '1 tsp ground cumin',\r\n      '1kg peeled pumpkin, diced',\r\n      '1 large potato, peeled, diced',\r\n      '1L Massel chicken style liquid stock or vegetable liquid stock',\r\n      '1/2 cup (125ml) thin cream',\r\n    ],\r\n  },\r\n];\r\n","import React, { useState, useReducer, createContext, useEffect } from 'react';\r\nimport { recipeReducer } from '../reducers/recipeReducer';\r\nimport { INIT_RECIPES } from '../utils/constants';\r\n\r\nexport const RecipesContext = createContext();\r\n\r\nconst RecipesContextProvider = ({ setMode, children }) => {\r\n  const [recipeList, dispatchRecipeList] = useReducer(recipeReducer, [], () => {\r\n    const localData = localStorage.getItem('recipes');\r\n    return localData ? JSON.parse(localData) : INIT_RECIPES;\r\n  });\r\n\r\n  const [activeRecipe, setActiveRecipe] = useState();\r\n\r\n  // Store data to localStorage when the list of recipes is changed\r\n  useEffect(() => {\r\n    settingMode(recipeList.length);\r\n    localStorage.setItem('recipes', JSON.stringify(recipeList));\r\n  }, [recipeList.length, recipeList]);\r\n\r\n  // Find a selected recipe then set as active and displays detail on the screen\r\n  const readRecipe = (id) => {\r\n    recipeList.filter((recipe) => {\r\n      if (recipe.id === id) setActiveRecipe(recipe);\r\n      return recipe;\r\n    });\r\n  };\r\n\r\n  // Check currently stored recipe, if it is empty, change to welcome mode\r\n  const settingMode = (recipeLength) => {\r\n    recipeLength > 0 ? setMode('read') : setMode('welcome');\r\n  };\r\n\r\n  return (\r\n    <RecipesContext.Provider\r\n      value={{\r\n        recipeList,\r\n        activeRecipe,\r\n        readRecipe,\r\n        setActiveRecipe,\r\n        dispatchRecipeList,\r\n        settingMode,\r\n      }}\r\n    >\r\n      {children}\r\n    </RecipesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecipesContextProvider;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const SelectedIdContext = createContext();\r\n\r\nfunction SelectedIdContextProvider(props) {\r\n  const [selectedRecipeId, setSelectedRecipeId] = useState(0);\r\n\r\n  const setSelectedId = (id) => {\r\n    setSelectedRecipeId(id);\r\n  };\r\n\r\n  return (\r\n    <SelectedIdContext.Provider value={{ selectedRecipeId, setSelectedId }}>\r\n      {props.children}\r\n    </SelectedIdContext.Provider>\r\n  );\r\n}\r\n\r\nexport default SelectedIdContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport { RecipesContext } from '../../contexts/RecipesContext';\r\nimport classes from './RecipeName.module.css';\r\n\r\nfunction RecipeName({ recipeId, name, clickHandler }) {\r\n  const { activeRecipe } = useContext(RecipesContext);\r\n\r\n  return (\r\n    <li\r\n      data-id={recipeId}\r\n      onClick={clickHandler}\r\n      className={`${classes.li} text-capitalize ${\r\n        activeRecipe && activeRecipe.id === recipeId ? classes.active : ''\r\n      }`}\r\n    >\r\n      {name}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default RecipeName;\r\n","import React, { useContext } from 'react';\r\nimport classes from './RecipeList.module.css';\r\nimport { RecipesContext } from '../../contexts/RecipesContext';\r\nimport { SelectedIdContext } from '../../contexts/SelectedIdContext';\r\nimport RecipeName from './RecipeName';\r\n\r\nimport { RECIPE_PER_PAGE } from '../../utils/constants';\r\n\r\n// Rendering list of recipes\r\nfunction RecipeList({ page }) {\r\n  // console.log('RecipeList render');\r\n  const { recipeList, readRecipe } = useContext(RecipesContext);\r\n  const { setSelectedId } = useContext(SelectedIdContext);\r\n  const startIndex = (page - 1) * RECIPE_PER_PAGE;\r\n\r\n  const selectedList = recipeList.slice(\r\n    startIndex,\r\n    startIndex + RECIPE_PER_PAGE\r\n  );\r\n\r\n  // When the list of recipes is clicked shows recipe details\r\n  const clickHandler = (event) => {\r\n    setSelectedId(event.target.dataset.id);\r\n    readRecipe(event.target.dataset.id);\r\n  };\r\n\r\n  return (\r\n    <ul className={classes.ul}>\r\n      <p className={classes.p}>\r\n        <i className='fas fa-arrow-circle-down me-2' />\r\n        Select a recipe to check the details.\r\n      </p>\r\n      {selectedList.map((recipe) => (\r\n        <RecipeName\r\n          key={recipe.id}\r\n          recipeId={recipe.id}\r\n          name={recipe.title}\r\n          clickHandler={clickHandler}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default RecipeList;\r\n","import React, { useContext } from 'react';\r\nimport { RecipesContext } from '../../contexts/RecipesContext';\r\nimport { SelectedIdContext } from '../../contexts/SelectedIdContext';\r\nimport { ModalContext } from '../../contexts/ModalContext';\r\nimport Button from '../../components/Button';\r\nimport classes from './RecipeDetail.module.css';\r\n\r\n// Rendering detail of a seleted recipe\r\nfunction RecipeDetail({ setMode }) {\r\n  // console.log('Recipe Detail render');\r\n\r\n  const {\r\n    activeRecipe: recipe,\r\n    dispatchRecipeList,\r\n    setActiveRecipe,\r\n  } = useContext(RecipesContext);\r\n  const { selectedRecipeId, setSelectedId } = useContext(SelectedIdContext);\r\n  const { updateModalOpen } = useContext(ModalContext);\r\n\r\n  // Formatting cooking time\r\n  const calcCookingTime = (time) => {\r\n    if (time >= 60) {\r\n      let hours = Math.floor(time / 60);\r\n      var min = time % 60;\r\n      return min > 0 ? hours + 'hr ' + min + 'mins' : hours + 'hr ';\r\n    } else return time + 'mins';\r\n  };\r\n  // When delete button is clicked\r\n  const deleteClickHandler = () => {\r\n    if (\r\n      window.confirm(\r\n        'Are you sure want to delete the recipe? If you delete the recipe, you will permanently lose your selected recipe.'\r\n      )\r\n    ) {\r\n      dispatchRecipeList({\r\n        type: 'REMOVE_RECIPE',\r\n        id: selectedRecipeId,\r\n      });\r\n      setSelectedId(0);\r\n      setActiveRecipe();\r\n      alert('The recipe has been deleted successfully!');\r\n    }\r\n  };\r\n\r\n  // When update button is clicked\r\n  const updateClickHandler = () => {\r\n    updateModalOpen();\r\n    setMode('update');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {recipe ? (\r\n        <>\r\n          <ul key={recipe.id} className={`row ${classes.ul}`}>\r\n            <li>\r\n              <h2>{recipe.title}</h2>\r\n            </li>\r\n            <li className={'col-md-5 col-sm-3'}>\r\n              <i className='far fa-clock me-2'></i>\r\n              {calcCookingTime(+recipe.cookingTime)}\r\n            </li>\r\n            <li className={'col-md-4 col-sm-3'}>\r\n              <i className='fas fa-user-friends me-2'></i>\r\n              {recipe.servings} servings\r\n            </li>\r\n            <li>Ingredients:</li>\r\n            <ul className={classes.ingredients}>\r\n              {recipe.ingredients.map((ingredient, index) => (\r\n                <li key={index} data-index={index}>\r\n                  {ingredient}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </ul>\r\n          {selectedRecipeId !== 0 && (\r\n            <div className='d-flex justify-content-end mb-5'>\r\n              <Button className={classes.button} onClick={updateClickHandler}>\r\n                Update\r\n              </Button>\r\n              <Button className={classes.button} onClick={deleteClickHandler}>\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecipeDetail;\r\n","import React from 'react';\r\nimport classes from './Pagination.module.css';\r\n\r\nfunction Pagination({ total, clickHandler, currentPage }) {\r\n  const numPages = [...Array(total).keys()].map((num) => num + 1);\r\n\r\n  // Render previous button\r\n  const renderPrevBtn = (currPage, num) => {\r\n    // Current Page 1, and there are other pages.\r\n    if (currPage === 1 && num.length > 1)\r\n      return (\r\n        <button className={classes.button} disabled>\r\n          <i className={`fas fa-chevron-left ${classes.i}`} />\r\n        </button>\r\n      );\r\n    // Other page, or last page\r\n    else if (\r\n      currPage < num.length ||\r\n      (currPage !== 1 && currPage === num.length)\r\n    ) {\r\n      return (\r\n        <button\r\n          data-goto={currentPage - 1}\r\n          className={classes.button}\r\n          key={currentPage - 1}\r\n          onClick={() => clickHandler(currentPage - 1)}\r\n        >\r\n          <i className={`fas fa-chevron-left ${classes.i}`} />\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  // Render Next button\r\n  const renderNextBtn = (currPage, num) => {\r\n    // Page 1, and there are other pages or not last page\r\n    if ((currPage === 1 && num.length > 1) || currPage < num.length) {\r\n      return (\r\n        <button\r\n          data-goto={currentPage + 1}\r\n          className={classes.button}\r\n          key={currentPage + 1}\r\n          onClick={() => clickHandler(currentPage + 1)}\r\n        >\r\n          <i className={`fas fa-chevron-right ${classes.i}`} />\r\n        </button>\r\n      );\r\n      // Other page or Last page\r\n    } else if (currPage !== 1 && currPage === num.length) {\r\n      return (\r\n        <button className={classes.button} disabled>\r\n          <i className={`fas fa-chevron-right ${classes.i}`} />\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return currentPage === 1 && numPages.length === 1 ? (\r\n    ''\r\n  ) : (\r\n    <div className='d-flex justify-content-center align-items-center'>\r\n      {renderPrevBtn(currentPage, numPages)}\r\n      <span className={classes.span}>{`${currentPage}`}</span> / {total}\r\n      {renderNextBtn(currentPage, numPages)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport RecipeList from '../components/Recipes/RecipeList';\r\nimport RecipeDetail from '../components/Recipes/RecipeDetail';\r\nimport Pagination from '../components/Pagination';\r\nimport { SelectedIdContext } from '../contexts/SelectedIdContext';\r\nimport { RecipesContext } from '../contexts/RecipesContext';\r\nimport { RECIPE_PER_PAGE } from '../utils/constants';\r\n\r\nconst ReadContent = ({ setMode }) => {\r\n  // console.log('ReadContent render');\r\n  const { recipeList, setActiveRecipe } = useContext(RecipesContext);\r\n  const { setSelectedId } = useContext(SelectedIdContext);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = () => {\r\n      setTotalPages(Math.ceil(recipeList.length / RECIPE_PER_PAGE));\r\n    };\r\n    fetchRecipes();\r\n  }, [recipeList.length]);\r\n\r\n  const handlePagination = (num) => {\r\n    setCurrentPage(num);\r\n    setSelectedId(0);\r\n    setActiveRecipe();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main className='row'>\r\n        <div className='recipe col-sm-12 col-md-6 col-lg-5'>\r\n          <RecipeList page={currentPage} />\r\n          <Pagination\r\n            total={totalPages}\r\n            currentPage={currentPage}\r\n            clickHandler={handlePagination}\r\n          />\r\n        </div>\r\n\r\n        <section className='recipe col-sm-12 col-md-6 col-lg-7'>\r\n          <RecipeDetail setMode={setMode} />\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReadContent;\r\n","import React from 'react';\r\nimport classes from './Card.module.css';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\n// Rendering ingredient badge\r\nfunction IngrediList({ icon, remove, className, ingredients }) {\r\n  // When Delete button is clicked on ingredient badge\r\n  const onDelete = (event) => {\r\n    remove(event.target.dataset.index);\r\n  };\r\n  return (\r\n    <>\r\n      {ingredients.length > 0\r\n        ? ingredients.map((ingredient, index) => (\r\n            <li\r\n              key={index}\r\n              data-index={index}\r\n              className={`${className ?? ''}`}\r\n              onClick={onDelete}\r\n            >\r\n              {ingredient}\r\n              {icon && <i data-index={index} className={icon} />}\r\n            </li>\r\n          ))\r\n        : ''}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IngrediList;\r\n","import classes from './FormModal.module.css';\r\nimport React, { useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Formik, Form, Field, useFormik, FieldArray } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Button from './Button';\r\nimport Card from './Card';\r\nimport IngrediList from './Recipes/IngrediList';\r\nimport { RecipesContext } from '../contexts/RecipesContext';\r\nimport { SelectedIdContext } from '../contexts/SelectedIdContext';\r\nimport { ModalContext } from '../contexts/ModalContext';\r\nimport { v4 as createId } from 'uuid';\r\n\r\n// Validation schema\r\nlet validationSchema = Yup.object().shape({\r\n  title: Yup.string().trim().strict(true).required('Required').min(1),\r\n  cookingTime: Yup.number()\r\n    .required('Required')\r\n    .positive('Invalid Cooking time')\r\n    .integer(),\r\n  servings: Yup.number()\r\n    .required('Required')\r\n    .positive('Invalid Servings')\r\n    .integer(),\r\n  ingredients: Yup.array()\r\n    .of(Yup.string())\r\n    .required('Must have ingredients')\r\n    .min(2, 'Minimum of 2 ingredients'),\r\n});\r\n\r\nfunction FormModal({ mode, setMode }) {\r\n  const {\r\n    activeRecipe,\r\n    setActiveRecipe,\r\n    dispatchRecipeList,\r\n    settingMode,\r\n    recipeList,\r\n  } = useContext(RecipesContext);\r\n  const { setSelectedId, selectedRecipeId } = useContext(SelectedIdContext);\r\n  const { setShowModal, closeModal } = useContext(ModalContext);\r\n\r\n  // When a new recipe is submitted\r\n  const addRecipeHandler = (recipe) => {\r\n    const newId = createId();\r\n    const newRecipe = { ...recipe, id: newId };\r\n    dispatchRecipeList({\r\n      type: 'ADD_RECIPE',\r\n      recipe: newRecipe,\r\n    });\r\n    setSelectedId(newId);\r\n    setActiveRecipe(newRecipe);\r\n    setMode('read');\r\n    closeModal();\r\n  };\r\n\r\n  // When modal close button is clicked\r\n  const closeHandler = () => {\r\n    settingMode(recipeList.length);\r\n    closeModal();\r\n  };\r\n\r\n  // When a updated recipe is submitted\r\n  const updateHandler = (values, id) => {\r\n    dispatchRecipeList({\r\n      type: 'UPDATE_RECIPE',\r\n      updatedRecipe: values,\r\n      id,\r\n    });\r\n    setActiveRecipe(values, (values.id = id));\r\n    setMode('read');\r\n    setShowModal(false);\r\n  };\r\n\r\n  // Getting values for updating form\r\n  var { id, title, cookingTime, servings, ingredients } = activeRecipe ?? '';\r\n\r\n  const formik = useFormik({\r\n    initialValues:\r\n      mode === 'create'\r\n        ? {\r\n            title: '',\r\n            cookingTime: '',\r\n            servings: '',\r\n            ingredient: '',\r\n            ingredients: [],\r\n          }\r\n        : mode === 'update'\r\n        ? {\r\n            title: title,\r\n            cookingTime: cookingTime,\r\n            servings: servings,\r\n            ingredients: ingredients,\r\n          }\r\n        : '',\r\n    onSubmit: (values) => {\r\n      console.log(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        <div className={classes.backdrop}></div>,\r\n        document.getElementById('backdrop-root')\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <Formik\r\n          initialValues={formik.initialValues}\r\n          validationSchema={validationSchema}\r\n          onKeyDown={(event) => event.preventDefault()}\r\n          onSubmit={(values) =>\r\n            mode === 'create'\r\n              ? addRecipeHandler(values)\r\n              : updateHandler(values, selectedRecipeId)\r\n          }\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Card className={classes.modal}>\r\n              <Row className={`align-items-center ${classes['modal-top']}`}>\r\n                <Col xs={12} sm={3} className='d-flex justify-content-end'>\r\n                  <Button\r\n                    icon='fas fa-times'\r\n                    className={classes['modal-close']}\r\n                    onClick={closeHandler}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} sm={9}>\r\n                  <header className={classes['modal-header']}>\r\n                    <h3 className='fw-bold'>\r\n                      {mode === 'create'\r\n                        ? 'Add a new recipe'\r\n                        : 'Update a recipe'}\r\n                    </h3>\r\n                  </header>\r\n                </Col>\r\n              </Row>\r\n              <Form>\r\n                <Row>\r\n                  <Col sm={12} md={6} className={classes.form}>\r\n                    <Row>\r\n                      {mode === 'update' && (\r\n                        <input type='hidden' name='id' value={id} />\r\n                      )}\r\n                      <Col className='mb-4'>\r\n                        <label htmlFor='title' className='form-label fw-bold'>\r\n                          Recipe Title\r\n                        </label>\r\n                        <Field\r\n                          type='text'\r\n                          id='title'\r\n                          name='title'\r\n                          className={`form-control ${classes.form}`}\r\n                        />\r\n                        {errors.title && touched.title ? (\r\n                          <div className={classes.error}>{errors.title}</div>\r\n                        ) : null}\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col xs={12} sm={6} className='mb-4'>\r\n                        <label\r\n                          htmlFor='cookingTime'\r\n                          className='form-label fw-bold'\r\n                        >\r\n                          Cook Time\r\n                        </label>\r\n                        <Field\r\n                          type='number'\r\n                          id='cookingTime'\r\n                          name='cookingTime'\r\n                          placeholder='min'\r\n                          className={`form-control ${classes.form}`}\r\n                          min='1'\r\n                          step='1'\r\n                        />\r\n                        {errors.cookingTime && touched.cookingTime ? (\r\n                          <div className={classes.error}>\r\n                            {errors.cookingTime}\r\n                          </div>\r\n                        ) : null}\r\n                      </Col>\r\n                      <Col xs={12} sm={6} className='mb-4'>\r\n                        <label\r\n                          htmlFor='servings'\r\n                          className='form-label fw-bold'\r\n                        >\r\n                          Servings\r\n                        </label>\r\n                        <Field\r\n                          type='number'\r\n                          id='servings'\r\n                          name='servings'\r\n                          placeholder='servings'\r\n                          className={`form-control ${classes.form}`}\r\n                          min='1'\r\n                          step='1'\r\n                        />\r\n                        {errors.servings && touched.servings ? (\r\n                          <div className={classes.error}>{errors.servings}</div>\r\n                        ) : null}\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col sm={12} md={6} className={classes.form}>\r\n                    <Row>\r\n                      <div className='mb-3 align-items-center'>\r\n                        <label\r\n                          htmlFor='ingredients'\r\n                          className='form-label fw-bold'\r\n                        >\r\n                          Ingredients\r\n                        </label>\r\n                        <FieldArray name='ingredients'>\r\n                          {(fieldArrayProps) => {\r\n                            const { unshift, remove, form } = fieldArrayProps;\r\n                            const { values, setFieldValue } = form;\r\n                            const { ingredients } = values;\r\n                            return (\r\n                              <div>\r\n                                <Field\r\n                                  type='text'\r\n                                  id='ingredient'\r\n                                  name='ingredient'\r\n                                  className={`form-control ${classes.form}`}\r\n                                  placeholder='Enter your ingredient'\r\n                                  onKeyDown={(event) => {\r\n                                    if (\r\n                                      event.key === 'Enter' &&\r\n                                      event.target.value.trim().length !== 0\r\n                                    ) {\r\n                                      event.preventDefault();\r\n                                      unshift(event.target.value);\r\n                                      setFieldValue('ingredient', '');\r\n                                    }\r\n                                  }}\r\n                                />\r\n                                {errors.ingredients && touched.ingredients ? (\r\n                                  <div className={classes.error}>\r\n                                    {errors.ingredients}\r\n                                  </div>\r\n                                ) : null}\r\n                                <ul className={`mt-4 ${classes.ul}`}>\r\n                                  <IngrediList\r\n                                    icon={'fas fa-times'}\r\n                                    remove={remove}\r\n                                    ingredients={ingredients}\r\n                                    className={classes.li}\r\n                                  />\r\n                                </ul>\r\n                              </div>\r\n                            );\r\n                          }}\r\n                        </FieldArray>\r\n                      </div>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col className='my-2'>\r\n                    <Button type='submit'>save</Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Card>\r\n          )}\r\n        </Formik>,\r\n        document.getElementById('modal-root')\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormModal;\r\n","import React, { useContext } from 'react';\r\nimport FormModal from '../components/FormModal';\r\nimport { ModalContext } from '../contexts/ModalContext';\r\n\r\nfunction UpdateContent({ mode, setMode }) {\r\n  // console.log('UpdateContent render');\r\n\r\n  const { showModal } = useContext(ModalContext);\r\n\r\n  return <>{showModal && <FormModal mode={mode} setMode={setMode} />}</>;\r\n}\r\n\r\nexport default UpdateContent;\r\n","import React, { useContext } from 'react';\r\nimport FormModal from '../components/FormModal';\r\nimport { ModalContext } from '../contexts/ModalContext';\r\n\r\nconst CreateContent = ({ mode, setMode }) => {\r\n  // console.log('CreateContent render');\r\n  const { showModal } = useContext(ModalContext);\r\n\r\n  return <>{showModal && <FormModal mode={mode} setMode={setMode} />}</>;\r\n};\r\n\r\nexport default CreateContent;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Header from './UI/Header';\r\n\r\nimport WelcomeContent from './pages/WelcomeContent';\r\nimport ReadContent from './pages/ReadContent';\r\nimport UpdateContent from './pages/UpdateContent';\r\nimport CreateContent from './pages/CreateContent';\r\nimport RecipesContextProvider from './contexts/RecipesContext';\r\nimport SelectedIdContextProvider from './contexts/SelectedIdContext';\r\nimport ModalContextProvider from './contexts/ModalContext';\r\n\r\nconsole.log('First App render');\r\n\r\nfunction App() {\r\n  // console.log('App render');\r\n  const [mode, setMode] = useState('');\r\n\r\n  return (\r\n    <div className='app container'>\r\n      <RecipesContextProvider setMode={setMode}>\r\n        <ModalContextProvider>\r\n          <Header setMode={setMode} />\r\n\r\n          <SelectedIdContextProvider>\r\n            {mode === 'welcome' ? (\r\n              <WelcomeContent />\r\n            ) : mode === 'read' ? (\r\n              <ReadContent mode={mode} setMode={setMode} />\r\n            ) : mode === 'create' ? (\r\n              <CreateContent mode={mode} setMode={setMode} />\r\n            ) : mode === 'update' ? (\r\n              <UpdateContent mode={mode} setMode={setMode} />\r\n            ) : (\r\n              ''\r\n            )}\r\n          </SelectedIdContextProvider>\r\n        </ModalContextProvider>\r\n      </RecipesContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"RecipeDetail_ul__1BjOt\",\"ingredients\":\"RecipeDetail_ingredients__2zfhg\",\"button\":\"RecipeDetail_button__3SNQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2l-Rf\",\"icon\":\"Button_icon__3pdlG\",\"fill\":\"Button_fill__3444V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WelcomeContent_container__2_ozm\",\"h2\":\"WelcomeContent_h2__2YMA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormModal_form__3nZRu\",\"backdrop\":\"FormModal_backdrop__1ocsl\",\"modal\":\"FormModal_modal__3byJB\",\"modal-top\":\"FormModal_modal-top__v-cgV\",\"modal-header\":\"FormModal_modal-header__1guNf\",\"modal-close\":\"FormModal_modal-close__3nPam\",\"ul\":\"FormModal_ul__ng3SX\",\"error\":\"FormModal_error__3cHIv\",\"li\":\"FormModal_li__seVoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1jH2J\",\"icon\":\"Logo_icon__ZLdKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"RecipeList_ul__vjicB\",\"icon\":\"RecipeList_icon__29edH\",\"p\":\"RecipeList_p__37Ayp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"RecipeName_li__24I0t\",\"active\":\"RecipeName_active__2sANL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Pagination_button__2flko\",\"span\":\"Pagination_span__1hDiZ\",\"i\":\"Pagination_i__vaIGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-box\":\"Header_btn-box__1UoX_\",\"btn-mobile\":\"Header_btn-mobile__3ine2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35WdF\"};"],"sourceRoot":""}